{"version":3,"sources":["closure-compiler-scripts/Schema_generated.js"," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] ","closure-compiler-scripts/flatbuffers.js","closure-compiler-scripts/File_generated.js","closure-compiler-scripts/Message_generated.js","closure-compiler-scripts/text-encoding.js","closure-compiler-scripts/tslib.js","targets/es5/cls/reader/message.js","targets/es5/cls/reader/file.js","targets/es5/cls/reader/stream.js","targets/es5/cls/vector/vector.js","targets/es5/cls/vector/typed.js","targets/es5/cls/vector/struct.js","targets/es5/cls/vector/dictionary.js","targets/es5/cls/vector/list.js","targets/es5/cls/reader/vector.js","targets/es5/cls/reader/dictionary.js","targets/es5/cls/reader/arrow.js","targets/es5/cls/table.js","targets/es5/cls/Arrow.js"],"names":["$jscomp.defineProperty","$jscomp.global","$jscomp.initSymbol","$jscomp.Symbol","$jscomp.SYMBOL_PREFIX","$jscomp.arrayIterator","$jscomp.initSymbolIterator","$jscomp.iteratorPrototype","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Type","NONE","Null","Int","FloatingPoint","Binary","Utf8","Bool","Decimal","Date","Time","Timestamp","Interval","List","Struct_","Union","FixedSizeBinary","FixedSizeList","Map","org.apache.arrow.flatbuf.FixedSizeList","bb","bb_pos","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.FixedSizeList","prototype","__init","org.apache.arrow.flatbuf.FixedSizeList.prototype.__init","i","org.apache.arrow.flatbuf.Int","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Int","org.apache.arrow.flatbuf.Int.prototype.__init","bitWidth","org.apache.arrow.flatbuf.Int.prototype.bitWidth","offset","__offset","readInt32","isSigned","org.apache.arrow.flatbuf.Int.prototype.isSigned","bytes_","org.apache.arrow.flatbuf.FloatingPoint","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.FloatingPoint","org.apache.arrow.flatbuf.FloatingPoint.prototype.__init","precision","org.apache.arrow.flatbuf.FloatingPoint.prototype.precision","readInt16","HALF","org.apache.arrow.flatbuf.VectorLayout","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.VectorLayout","org.apache.arrow.flatbuf.VectorLayout.prototype.__init","org.apache.arrow.flatbuf.VectorLayout.getRootAsVectorLayout","position","org.apache.arrow.flatbuf.VectorLayout.prototype.bitWidth","type","org.apache.arrow.flatbuf.VectorLayout.prototype.type","OFFSET","org.apache.arrow.flatbuf.KeyValue","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.KeyValue","org.apache.arrow.flatbuf.KeyValue.prototype.__init","key","org.apache.arrow.flatbuf.KeyValue.prototype.key","optionalEncoding","__string","value","org.apache.arrow.flatbuf.KeyValue.prototype.value","org.apache.arrow.flatbuf.DictionaryEncoding","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.DictionaryEncoding","org.apache.arrow.flatbuf.DictionaryEncoding.prototype.__init","id","org.apache.arrow.flatbuf.DictionaryEncoding.prototype.id","readInt64","createLong","org.apache.arrow.flatbuf.DictionaryEncoding.prototype.indexType","__indirect","org.apache.arrow.flatbuf.Field","module$contents$module$targets$es5$cls$format$Schema_generated_org$apache$arrow$flatbuf$Field.prototype","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Field.prototype","org.apache.arrow.flatbuf.Field.prototype.__init","name","org.apache.arrow.flatbuf.Field.prototype.name","org.apache.arrow.flatbuf.Field.prototype.nullable","org.apache.arrow.flatbuf.Field.prototype.typeType","org.apache.arrow.flatbuf.Field.prototype.type","obj","__union","org.apache.arrow.flatbuf.Field.prototype.dictionary","children","org.apache.arrow.flatbuf.Field.prototype.children","index","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Field","__vector","org.apache.arrow.flatbuf.Field.prototype.childrenLength","__vector_len","layout","org.apache.arrow.flatbuf.Field.prototype.layout","layoutLength","org.apache.arrow.flatbuf.Field.prototype.layoutLength","customMetadata","org.apache.arrow.flatbuf.Field.prototype.customMetadata","customMetadataLength","org.apache.arrow.flatbuf.Field.prototype.customMetadataLength","org.apache.arrow.flatbuf.Buffer","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Buffer","org.apache.arrow.flatbuf.Buffer.prototype.__init","page","org.apache.arrow.flatbuf.Buffer.prototype.page","org.apache.arrow.flatbuf.Buffer.prototype.offset","length","org.apache.arrow.flatbuf.Buffer.prototype.length","org.apache.arrow.flatbuf.Schema","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Schema","org.apache.arrow.flatbuf.Schema.prototype.__init","org.apache.arrow.flatbuf.Schema.prototype.fields","org.apache.arrow.flatbuf.Schema.prototype.customMetadata","org.apache.arrow.flatbuf.Schema.prototype.customMetadataLength","org.apache.arrow.flatbuf.Footer","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Footer","org.apache.arrow.flatbuf.Footer.prototype.__init","version","org.apache.arrow.flatbuf.Footer.prototype.version","V1","schema","org.apache.arrow.flatbuf.Footer.prototype.schema","org.apache.arrow.flatbuf.Block","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Block","org.apache.arrow.flatbuf.Block.prototype.__init","org.apache.arrow.flatbuf.Block.prototype.offset","bodyLength","org.apache.arrow.flatbuf.Block.prototype.bodyLength","module$contents$module$flatbuffers_flatbuffers.int32","Int32Array","Float32Array","module$contents$module$flatbuffers_flatbuffers.int32.buffer","buffer","Float64Array","Uint16Array","Uint8Array","flatbuffers.Long","low","high","flatbuffers.Long.prototype.toFloat64","module$contents$module$flatbuffers_flatbuffers.Long.ZERO","module$contents$module$flatbuffers_flatbuffers.Long","flatbuffers.Builder","opt_initial_size","initial_size","module$contents$module$flatbuffers_flatbuffers.ByteBuffer","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","force_defaults","flatbuffers.Builder.prototype.prep","size","additional_bytes","align_size","old_buf_size","Error","new_buf_size","nbb","setPosition","bytes","set","pad","writeInt8","module$contents$module$flatbuffers_flatbuffers$Builder.prototype","module$contents$module$flatbuffers_flatbuffers.Builder.prototype","flatbuffers.Builder.prototype.writeInt8","writeInt16","flatbuffers.Builder.prototype.writeInt16","writeInt32","flatbuffers.Builder.prototype.writeInt32","flatbuffers.Builder.prototype.addInt16","prep","flatbuffers.Builder.prototype.addFieldInt16","voffset","defaultValue","addInt16","slot","flatbuffers.Builder.prototype.offset","flatbuffers.Builder.prototype.startObject","notNested","numfields","flatbuffers.Builder.prototype.endObject","addInt32","vtableloc","module$contents$module$flatbuffers_flatbuffers.SIZEOF_SHORT","standard_fields","existing_vtable","vt1","vt2","len","j","push","finish","flatbuffers.Builder.prototype.finish","root_table","opt_file_identifier","module$contents$module$flatbuffers_flatbuffers.FILE_IDENTIFIER_LENGTH","charCodeAt","module$contents$module$flatbuffers_flatbuffers.SIZEOF_INT","addOffset","flatbuffers.Builder.prototype.createLong","flatbuffers.ByteBuffer","position_","module$contents$module$flatbuffers_flatbuffers$ByteBuffer.prototype","module$contents$module$flatbuffers_flatbuffers.ByteBuffer.prototype","flatbuffers.ByteBuffer.prototype.bytes","flatbuffers.ByteBuffer.prototype.position","flatbuffers.ByteBuffer.prototype.setPosition","flatbuffers.ByteBuffer.prototype.readUint8","flatbuffers.ByteBuffer.prototype.readInt16","readUint16","flatbuffers.ByteBuffer.prototype.readInt32","flatbuffers.ByteBuffer.prototype.readInt64","flatbuffers.ByteBuffer.prototype.writeInt8","flatbuffers.ByteBuffer.prototype.writeInt16","flatbuffers.ByteBuffer.prototype.writeInt32","flatbuffers.ByteBuffer.prototype.__offset","vtable_offset","flatbuffers.ByteBuffer.prototype.__union","t","flatbuffers.ByteBuffer.prototype.__string","opt_encoding","result","UTF8_BYTES","subarray","a","readUint8","b","codePoint","c","d","String","fromCharCode","flatbuffers.ByteBuffer.prototype.__indirect","flatbuffers.ByteBuffer.prototype.__vector","flatbuffers.ByteBuffer.prototype.__vector_len","flatbuffers.ByteBuffer.prototype.createLong","org.apache.arrow.flatbuf.FieldNode","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.FieldNode","org.apache.arrow.flatbuf.FieldNode.prototype.__init","org.apache.arrow.flatbuf.FieldNode.prototype.length","org.apache.arrow.flatbuf.RecordBatch","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.RecordBatch","org.apache.arrow.flatbuf.RecordBatch.prototype.__init","org.apache.arrow.flatbuf.RecordBatch.prototype.length","org.apache.arrow.flatbuf.DictionaryBatch","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.DictionaryBatch","org.apache.arrow.flatbuf.DictionaryBatch.prototype.__init","org.apache.arrow.flatbuf.DictionaryBatch.prototype.id","data","org.apache.arrow.flatbuf.DictionaryBatch.prototype.data","org.apache.arrow.flatbuf.Message","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.Message","org.apache.arrow.flatbuf.Message.prototype.__init","org.apache.arrow.flatbuf.Message.prototype.version","org.apache.arrow.flatbuf.Message.prototype.headerType","org.apache.arrow.flatbuf.Message.prototype.header","org.apache.arrow.flatbuf.Message.prototype.bodyLength","ToDictionary","o","undefined","Object","TypeError","Stream","tokens","slice","call","endOfStream","read","shift","end_of_stream","token","Array","isArray","decoderError","fatal","TextDecoder","encoding","options","toLowerCase","DEFAULT_ENCODING","_BOMseen","_streaming","_decoder","_fatal","_ignoreBOM","defineProperty","decode","input","ArrayBuffer","byteOffset","byteLength","UTF8Decoder","input_stream","code_points","handler","finished","apply","indexOf","s","cp","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","this.handler","stream","bite","min","max","unshift","pop","code_point","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__generator","thisArg","body","verb","n","v","step","op","f","_","y","done","label","ops","trys","e","sent","g","next","Symbol","iterator","__values","m","__read","r","ar","error","__spread","arguments","concat","readMessages","message","_a","PADDING","readMessageBatches","_b","header","e_1_1","e_1","_c","_d","headerType","RecordBatch","DictionaryBatch","toFloat64","toString","return","MAGIC","MAGIC_STR","_checkMagic","magicLength","magicAndPadding","magicX2AndPadding","readFile","bbs","_i","bbs_1","bbs_1_1","fileLength","footerLength","footerOffset","footer","block","batch","e_2_1","e_3_1","e_3","_e","_f","e_2","_g","_h","readStream","Schema","sliceToRangeArgs","start","end","from","to","total","isFinite","Vector","Vector.create","field","args","vector","bind","typeType","props","entry","Vector.from","source","defaultName","defaultType","defaultProps","get","Vector.prototype.get","Vector.prototype.concat","Vector.prototype.slice","stride","range","Vector.prototype.range","Vector$$module$targets$es5$cls$vector$vector.prototype","Vector.prototype","VirtualVector","_super","lists","_this","filter","Boolean","_arrayType","enumerable","configurable","VirtualVector.prototype.get","rows","VirtualVector.prototype.range","local","listsLength","arraySet","typedArraySet","target","Math","outer","list","inner","k","BitVector","reduce","l","xs","BitVector.from","src","constant","pack","BitVector.pack","values","bit","byte","values_1","values_1_1","BitVector.prototype.get","BitVector.prototype.set","BitVector.prototype.concat","ValidVector","ValidVector.prototype.get","TypedVector","validity","TypedVector.prototype.concat","DateVector","DateVector.prototype.get","pow","it","iv","IndexVector","IndexVector.prototype.get","returnWithBatchIndex","ByteVector","ByteVector.prototype.get","LongVector","LongVector.prototype.get","Int8Vector","Int16Vector","Int32Vector","Int64Vector","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","Float32Vector","Float64Vector","Int8Array","Int16Array","Uint32Array","StructVector","vectors","map","StructVector.prototype.get","StructVector.prototype.concat","DictionaryVector","dictionary","keys","DictionaryVector.prototype.index","DictionaryVector.prototype.value","DictionaryVector.prototype.get","DictionaryVector.prototype.concat","loc","ListVectorBase","offsets","ListVectorBase.prototype.get","ListVectorBase.prototype.concat","r1","r2","ListVector","Utf8Vector","Utf8Vector.prototype.get","chars","decoder","FixedSizeListVector","abs","FixedSizeListVector.prototype.get","FixedSizeListVector.prototype.concat","readVector","state","dictionaries","readTyped","typedVectorReaders","readDictionaryVector","fieldType","indexType","indexField","createSyntheticDictionaryIndexField","readIntVector","Uint8Views","Uint32Views","createIntDataViews","createDataView","IntViews","createUintDataViews","UintViews","createDateDataViews","createFloatDataViews","FloatViews","createNestedDataViews","createValidityDataViews","createUtf8DataViews","Int32Views","floatVectors","SINGLE","DOUBLE","intVectors","read_IntVector","readUintVector","readVectorLayout","createIntVector","readFloatVector","readDateVector","readUtf8Vector","offsetsAdjusted","readListVector","readFixedSizeListVector","listSize","readStructVector","childrenLength","createVector","readLayout","chunk","integerFieldType","nodeIndex","bufferLength","nodeLength","node","bufferIndex","TYPE","DATA","dataViews","offsetViews","DataViewType","layouts","builder","module$contents$module$flatbuffers_flatbuffers.Builder","nullable","startObject","addFieldInt16","VALIDITY","endObject","module$contents$module$targets$es5$cls$format$Schema_generated_org.apache.arrow.flatbuf.VectorLayout.getRootAsVectorLayout","readDictionaries","readRecords","readBuffers","byteBuffers","fieldsLength","e_4","_j","toByteBuffer","fields","e_4_1","arr","Table","columns","_columns","_columnsMap","vec","Table.from","_loop_1","fromStruct","Table.fromStruct","cols","rowAsMap","Table.prototype.rows","startRow","endRow","compact","rowIndex","rowOffset","rowsTotal","getRow","Table.prototype.cols","startCol","endCol","column","Table.prototype.getRow","rowAsArray","rowAsObject","getCell","Table.prototype.getCell","columnName","getColumn","getCellAt","Table.prototype.getCellAt","columnIndex","getColumnAt","Table.prototype.getColumn","Table.prototype.getColumnAt","Table.prototype.toString","maxColumnWidths","row","val","leftPad","join","str","fill","Arrow","eval"],"mappings":"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","file":"Arrow.js","sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\r\ngoog.module(\"module$targets$es5$cls$format$Schema_generated\");\r\ngoog.module.declareLegacyNamespace();\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\nvar org = org || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache = org.apache || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow = org.apache.arrow || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow.flatbuf = org.apache.arrow.flatbuf || {};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.MetadataVersion = {\r\n  V1: 0, 0: 'V1',\r\n  V2: 1, 1: 'V2',\r\n  V3: 2, 2: 'V3',\r\n};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.UnionMode = {\r\n  Sparse: 0, 0: 'Sparse',\r\n  Dense: 1, 1: 'Dense',\r\n};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.Precision = {\r\n  HALF: 0, 0: 'HALF',\r\n  SINGLE: 1, 1: 'SINGLE',\r\n  DOUBLE: 2, 2: 'DOUBLE',\r\n};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.DateUnit = {\r\n  DAY: 0, 0: 'DAY',\r\n  MILLISECOND: 1, 1: 'MILLISECOND',\r\n};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.TimeUnit = {\r\n  SECOND: 0, 0: 'SECOND',\r\n  MILLISECOND: 1, 1: 'MILLISECOND',\r\n  MICROSECOND: 2, 2: 'MICROSECOND',\r\n  NANOSECOND: 3, 3: 'NANOSECOND',\r\n};\r\n\r\n/**\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.IntervalUnit = {\r\n  YEAR_MONTH: 0, 0: 'YEAR_MONTH',\r\n  DAY_TIME: 1, 1: 'DAY_TIME',\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * Top-level Type value, enabling extensible type-specific metadata. We can\r\n * add new logical types to Type without breaking backwards compatibility\r\n *\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.Type = {\r\n  NONE: 0, 0: 'NONE',\r\n  Null: 1, 1: 'Null',\r\n  Int: 2, 2: 'Int',\r\n  FloatingPoint: 3, 3: 'FloatingPoint',\r\n  Binary: 4, 4: 'Binary',\r\n  Utf8: 5, 5: 'Utf8',\r\n  Bool: 6, 6: 'Bool',\r\n  Decimal: 7, 7: 'Decimal',\r\n  Date: 8, 8: 'Date',\r\n  Time: 9, 9: 'Time',\r\n  Timestamp: 10, 10: 'Timestamp',\r\n  Interval: 11, 11: 'Interval',\r\n  List: 12, 12: 'List',\r\n  Struct_: 13, 13: 'Struct_',\r\n  Union: 14, 14: 'Union',\r\n  FixedSizeBinary: 15, 15: 'FixedSizeBinary',\r\n  FixedSizeList: 16, 16: 'FixedSizeList',\r\n  Map: 17, 17: 'Map',\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * The possible types of a vector\r\n *\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.VectorType = {\r\n  /**\r\n   * used in List type, Dense Union and variable length primitive types (String, Binary)\r\n   */\r\n  OFFSET: 0, 0: 'OFFSET',\r\n\r\n  /**\r\n   * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\r\n   */\r\n  DATA: 1, 1: 'DATA',\r\n\r\n  /**\r\n   * Bit vector indicating if each value is null\r\n   */\r\n  VALIDITY: 2, 2: 'VALIDITY',\r\n\r\n  /**\r\n   * Type vector used in Union type\r\n   */\r\n  TYPE: 3, 3: 'TYPE',\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * Endianness of the platform producing the data\r\n *\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.Endianness = {\r\n  Little: 0, 0: 'Little',\r\n  Big: 1, 1: 'Big',\r\n};\r\n\r\n/**\r\n * These are stored in the flatbuffer in the Type union below\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Null = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Null}\r\n */\r\norg.apache.arrow.flatbuf.Null.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Null=} obj\r\n * @returns {org.apache.arrow.flatbuf.Null}\r\n */\r\norg.apache.arrow.flatbuf.Null.getRootAsNull = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Null.startNull = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Null.endNull = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\r\n * (according to the physical memory layout). We used Struct_ here as\r\n * Struct is a reserved word in Flatbuffers\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Struct_ = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Struct_}\r\n */\r\norg.apache.arrow.flatbuf.Struct_.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Struct_=} obj\r\n * @returns {org.apache.arrow.flatbuf.Struct_}\r\n */\r\norg.apache.arrow.flatbuf.Struct_.getRootAsStruct_ = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Struct_.startStruct_ = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Struct_.endStruct_ = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.List = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.List}\r\n */\r\norg.apache.arrow.flatbuf.List.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.List=} obj\r\n * @returns {org.apache.arrow.flatbuf.List}\r\n */\r\norg.apache.arrow.flatbuf.List.getRootAsList = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.List.startList = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.List.endList = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.FixedSizeList}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.FixedSizeList=} obj\r\n * @returns {org.apache.arrow.flatbuf.FixedSizeList}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.getRootAsFixedSizeList = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * Number of list items per value\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.prototype.listSize = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.startFixedSizeList = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} listSize\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.addListSize = function(builder, listSize) {\r\n  builder.addFieldInt32(0, listSize, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeList.endFixedSizeList = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * A Map is a logical nested type that is represented as\r\n *\r\n * List<entry: Struct<key: K, value: V>>\r\n *\r\n * In this layout, the keys and values are each respectively contiguous. We do\r\n * not constrain the key and value types, so the application is responsible\r\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\r\n * may be set in the metadata for this field\r\n *\r\n * In a Field with Map type, the Field has a child Struct field, which then\r\n * has two children: key type and the second the value type. The names of the\r\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\r\n * not enforced\r\n *\r\n * Map\r\n *   - child[0] entry: Struct\r\n *     - child[0] key: K\r\n *     - child[1] value: V\r\n *\r\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\r\n *\r\n * The metadata is structured so that Arrow systems without special handling\r\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\r\n * field must have the same contents as a List.\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Map = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Map}\r\n */\r\norg.apache.arrow.flatbuf.Map.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Map=} obj\r\n * @returns {org.apache.arrow.flatbuf.Map}\r\n */\r\norg.apache.arrow.flatbuf.Map.getRootAsMap = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * Set to true if the keys within each value are sorted\r\n *\r\n * @returns {boolean}\r\n */\r\norg.apache.arrow.flatbuf.Map.prototype.keysSorted = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Map.startMap = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {boolean} keysSorted\r\n */\r\norg.apache.arrow.flatbuf.Map.addKeysSorted = function(builder, keysSorted) {\r\n  builder.addFieldInt8(0, +keysSorted, +false);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Map.endMap = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * A union is a complex type with children in Field\r\n * By default ids in the type vector refer to the offsets in the children\r\n * optionally typeIds provides an indirection between the child offset and the type id\r\n * for each child typeIds[offset] is the id used in the type vector\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Union = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Union}\r\n */\r\norg.apache.arrow.flatbuf.Union.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Union=} obj\r\n * @returns {org.apache.arrow.flatbuf.Union}\r\n */\r\norg.apache.arrow.flatbuf.Union.getRootAsUnion = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.UnionMode}\r\n */\r\norg.apache.arrow.flatbuf.Union.prototype.mode = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.UnionMode} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Union.prototype.typeIds = function(index) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Union.prototype.typeIdsLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns {Int32Array}\r\n */\r\norg.apache.arrow.flatbuf.Union.prototype.typeIdsArray = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Union.startUnion = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.UnionMode} mode\r\n */\r\norg.apache.arrow.flatbuf.Union.addMode = function(builder, mode) {\r\n  builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} typeIdsOffset\r\n */\r\norg.apache.arrow.flatbuf.Union.addTypeIds = function(builder, typeIdsOffset) {\r\n  builder.addFieldOffset(1, typeIdsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<number>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Union.createTypeIdsVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt32(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Union.startTypeIdsVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Union.endUnion = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Int = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Int}\r\n */\r\norg.apache.arrow.flatbuf.Int.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Int=} obj\r\n * @returns {org.apache.arrow.flatbuf.Int}\r\n */\r\norg.apache.arrow.flatbuf.Int.getRootAsInt = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Int.prototype.bitWidth = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns {boolean}\r\n */\r\norg.apache.arrow.flatbuf.Int.prototype.isSigned = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Int.startInt = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} bitWidth\r\n */\r\norg.apache.arrow.flatbuf.Int.addBitWidth = function(builder, bitWidth) {\r\n  builder.addFieldInt32(0, bitWidth, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {boolean} isSigned\r\n */\r\norg.apache.arrow.flatbuf.Int.addIsSigned = function(builder, isSigned) {\r\n  builder.addFieldInt8(1, +isSigned, +false);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Int.endInt = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.FloatingPoint}\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.FloatingPoint=} obj\r\n * @returns {org.apache.arrow.flatbuf.FloatingPoint}\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.getRootAsFloatingPoint = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.Precision}\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.prototype.precision = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.Precision} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.startFloatingPoint = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.Precision} precision\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.addPrecision = function(builder, precision) {\r\n  builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.FloatingPoint.endFloatingPoint = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * Unicode with UTF-8 encoding\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Utf8 = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Utf8}\r\n */\r\norg.apache.arrow.flatbuf.Utf8.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Utf8=} obj\r\n * @returns {org.apache.arrow.flatbuf.Utf8}\r\n */\r\norg.apache.arrow.flatbuf.Utf8.getRootAsUtf8 = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Utf8.startUtf8 = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Utf8.endUtf8 = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Binary = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Binary}\r\n */\r\norg.apache.arrow.flatbuf.Binary.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Binary=} obj\r\n * @returns {org.apache.arrow.flatbuf.Binary}\r\n */\r\norg.apache.arrow.flatbuf.Binary.getRootAsBinary = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Binary.startBinary = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Binary.endBinary = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.FixedSizeBinary}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.FixedSizeBinary=} obj\r\n * @returns {org.apache.arrow.flatbuf.FixedSizeBinary}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.getRootAsFixedSizeBinary = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * Number of bytes per value\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.prototype.byteWidth = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.startFixedSizeBinary = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} byteWidth\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.addByteWidth = function(builder, byteWidth) {\r\n  builder.addFieldInt32(0, byteWidth, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.FixedSizeBinary.endFixedSizeBinary = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Bool = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Bool}\r\n */\r\norg.apache.arrow.flatbuf.Bool.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Bool=} obj\r\n * @returns {org.apache.arrow.flatbuf.Bool}\r\n */\r\norg.apache.arrow.flatbuf.Bool.getRootAsBool = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Bool.startBool = function(builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Bool.endBool = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Decimal = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Decimal}\r\n */\r\norg.apache.arrow.flatbuf.Decimal.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Decimal=} obj\r\n * @returns {org.apache.arrow.flatbuf.Decimal}\r\n */\r\norg.apache.arrow.flatbuf.Decimal.getRootAsDecimal = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * Total number of decimal digits\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Decimal.prototype.precision = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * Number of digits after the decimal point \".\"\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Decimal.prototype.scale = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Decimal.startDecimal = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} precision\r\n */\r\norg.apache.arrow.flatbuf.Decimal.addPrecision = function(builder, precision) {\r\n  builder.addFieldInt32(0, precision, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} scale\r\n */\r\norg.apache.arrow.flatbuf.Decimal.addScale = function(builder, scale) {\r\n  builder.addFieldInt32(1, scale, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Decimal.endDecimal = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\r\n * epoch (1970-01-01), stored in either of two units:\r\n *\r\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\r\n *   leap seconds), where the values are evenly divisible by 86400000\r\n * * Days (32 bits) since the UNIX epoch\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Date = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Date}\r\n */\r\norg.apache.arrow.flatbuf.Date.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Date=} obj\r\n * @returns {org.apache.arrow.flatbuf.Date}\r\n */\r\norg.apache.arrow.flatbuf.Date.getRootAsDate = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.DateUnit}\r\n */\r\norg.apache.arrow.flatbuf.Date.prototype.unit = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.DateUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Date.startDate = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.DateUnit} unit\r\n */\r\norg.apache.arrow.flatbuf.Date.addUnit = function(builder, unit) {\r\n  builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Date.endDate = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * Time type. The physical storage type depends on the unit\r\n * - SECOND and MILLISECOND: 32 bits\r\n * - MICROSECOND and NANOSECOND: 64 bits\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Time = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Time}\r\n */\r\norg.apache.arrow.flatbuf.Time.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Time=} obj\r\n * @returns {org.apache.arrow.flatbuf.Time}\r\n */\r\norg.apache.arrow.flatbuf.Time.getRootAsTime = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.TimeUnit}\r\n */\r\norg.apache.arrow.flatbuf.Time.prototype.unit = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.TimeUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Time.prototype.bitWidth = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Time.startTime = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.TimeUnit} unit\r\n */\r\norg.apache.arrow.flatbuf.Time.addUnit = function(builder, unit) {\r\n  builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} bitWidth\r\n */\r\norg.apache.arrow.flatbuf.Time.addBitWidth = function(builder, bitWidth) {\r\n  builder.addFieldInt32(1, bitWidth, 32);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Time.endTime = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\r\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\r\n * leap seconds.\r\n *\r\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\r\n * aware\" timestamps. Read about the timezone attribute for more detail\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Timestamp = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Timestamp}\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Timestamp=} obj\r\n * @returns {org.apache.arrow.flatbuf.Timestamp}\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.getRootAsTimestamp = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.TimeUnit}\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.prototype.unit = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.TimeUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\r\n};\r\n\r\n/**\r\n * The time zone is a string indicating the name of a time zone, one of:\r\n *\r\n * * As used in the Olson time zone database (the \"tz database\" or\r\n *   \"tzdata\"), such as \"America/New_York\"\r\n * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\r\n *\r\n * Whether a timezone string is present indicates different semantics about\r\n * the data:\r\n *\r\n * * If the time zone is null or equal to an empty string, the data is \"time\r\n *   zone naive\" and shall be displayed *as is* to the user, not localized\r\n *   to the locale of the user. This data can be though of as UTC but\r\n *   without having \"UTC\" as the time zone, it is not considered to be\r\n *   localized to any time zone\r\n *\r\n * * If the time zone is set to a valid value, values can be displayed as\r\n *   \"localized\" to that time zone, even though the underlying 64-bit\r\n *   integers are identical to the same data stored in UTC. Converting\r\n *   between time zones is a metadata-only operation and does not change the\r\n *   underlying values\r\n *\r\n * @param {flatbuffers.Encoding=} optionalEncoding\r\n * @returns {string|Uint8Array|null}\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.prototype.timezone = function(optionalEncoding) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.startTimestamp = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.TimeUnit} unit\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.addUnit = function(builder, unit) {\r\n  builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} timezoneOffset\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.addTimezone = function(builder, timezoneOffset) {\r\n  builder.addFieldOffset(1, timezoneOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Timestamp.endTimestamp = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Interval = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Interval}\r\n */\r\norg.apache.arrow.flatbuf.Interval.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Interval=} obj\r\n * @returns {org.apache.arrow.flatbuf.Interval}\r\n */\r\norg.apache.arrow.flatbuf.Interval.getRootAsInterval = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.IntervalUnit}\r\n */\r\norg.apache.arrow.flatbuf.Interval.prototype.unit = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.IntervalUnit} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Interval.startInterval = function(builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.IntervalUnit} unit\r\n */\r\norg.apache.arrow.flatbuf.Interval.addUnit = function(builder, unit) {\r\n  builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Interval.endInterval = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * represents the physical layout of a buffer\r\n * buffers have fixed width slots of a given type\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.VectorLayout}\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.VectorLayout=} obj\r\n * @returns {org.apache.arrow.flatbuf.VectorLayout}\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.getRootAsVectorLayout = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.VectorLayout).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * the width of a slot in the buffer (typically 1, 8, 16, 32 or 64)\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.prototype.bitWidth = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * the purpose of the vector\r\n *\r\n * @returns {org.apache.arrow.flatbuf.VectorType}\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.prototype.type = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.VectorType} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.VectorType.OFFSET;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.startVectorLayout = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} bitWidth\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.addBitWidth = function(builder, bitWidth) {\r\n  builder.addFieldInt16(0, bitWidth, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.VectorType} type\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.addType = function(builder, type) {\r\n  builder.addFieldInt16(1, type, org.apache.arrow.flatbuf.VectorType.OFFSET);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.VectorLayout.endVectorLayout = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * user defined key value pairs to add custom metadata to arrow\r\n * key namespacing is the responsibility of the user\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.KeyValue = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.KeyValue}\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.KeyValue=} obj\r\n * @returns {org.apache.arrow.flatbuf.KeyValue}\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.getRootAsKeyValue = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Encoding=} optionalEncoding\r\n * @returns {string|Uint8Array|null}\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.prototype.key = function(optionalEncoding) {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Encoding=} optionalEncoding\r\n * @returns {string|Uint8Array|null}\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.prototype.value = function(optionalEncoding) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.startKeyValue = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} keyOffset\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.addKey = function(builder, keyOffset) {\r\n  builder.addFieldOffset(0, keyOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} valueOffset\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.addValue = function(builder, valueOffset) {\r\n  builder.addFieldOffset(1, valueOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.KeyValue.endKeyValue = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * Dictionary encoding metadata\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.DictionaryEncoding}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.DictionaryEncoding=} obj\r\n * @returns {org.apache.arrow.flatbuf.DictionaryEncoding}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.getRootAsDictionaryEncoding = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * The known dictionary id in the application where this data is used. In\r\n * the file or streaming formats, the dictionary ids are found in the\r\n * DictionaryBatch messages\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.prototype.id = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * The dictionary indices are constrained to be positive integers. If this\r\n * field is null, the indices must be signed int32\r\n *\r\n * @param {org.apache.arrow.flatbuf.Int=} obj\r\n * @returns {org.apache.arrow.flatbuf.Int|null}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.prototype.indexType = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\r\n};\r\n\r\n/**\r\n * By default, dictionaries are not ordered, or the order does not have\r\n * semantic meaning. In some statistical, applications, dictionary-encoding\r\n * is used to represent ordered categorical data, and we provide a way to\r\n * preserve that metadata here\r\n *\r\n * @returns {boolean}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.prototype.isOrdered = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.startDictionaryEncoding = function(builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} id\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.addId = function(builder, id) {\r\n  builder.addFieldInt64(0, id, builder.createLong(0, 0));\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} indexTypeOffset\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.addIndexType = function(builder, indexTypeOffset) {\r\n  builder.addFieldOffset(1, indexTypeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {boolean} isOrdered\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.addIsOrdered = function(builder, isOrdered) {\r\n  builder.addFieldInt8(2, +isOrdered, +false);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryEncoding.endDictionaryEncoding = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * A field represents a named column in a record / row batch or child of a\r\n * nested type.\r\n *\r\n * - children is only for nested Arrow arrays\r\n * - For primitive types, children will have length 0\r\n * - nullable should default to true in general\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Field = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Field}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Field=} obj\r\n * @returns {org.apache.arrow.flatbuf.Field}\r\n */\r\norg.apache.arrow.flatbuf.Field.getRootAsField = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Encoding=} optionalEncoding\r\n * @returns {string|Uint8Array|null}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.name = function(optionalEncoding) {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns {boolean}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.nullable = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.Type}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.typeType = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.Type} */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Table} obj\r\n * @returns {?flatbuffers.Table}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.type = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\r\n};\r\n\r\n/**\r\n * @param {org.apache.arrow.flatbuf.DictionaryEncoding=} obj\r\n * @returns {org.apache.arrow.flatbuf.DictionaryEncoding|null}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.dictionary = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.Field=} obj\r\n * @returns {org.apache.arrow.flatbuf.Field}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.children = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 14);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.childrenLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * layout of buffers produced for this type (as derived from the Type)\r\n * does not include children\r\n * each recordbatch will return instances of those Buffers.\r\n *\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.VectorLayout=} obj\r\n * @returns {org.apache.arrow.flatbuf.VectorLayout}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.layout = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 16);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.VectorLayout).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.layoutLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.KeyValue=} obj\r\n * @returns {org.apache.arrow.flatbuf.KeyValue}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.customMetadata = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 18);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Field.prototype.customMetadataLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Field.startField = function(builder) {\r\n  builder.startObject(8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} nameOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addName = function(builder, nameOffset) {\r\n  builder.addFieldOffset(0, nameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {boolean} nullable\r\n */\r\norg.apache.arrow.flatbuf.Field.addNullable = function(builder, nullable) {\r\n  builder.addFieldInt8(1, +nullable, +false);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.Type} typeType\r\n */\r\norg.apache.arrow.flatbuf.Field.addTypeType = function(builder, typeType) {\r\n  builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} typeOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addType = function(builder, typeOffset) {\r\n  builder.addFieldOffset(3, typeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} dictionaryOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addDictionary = function(builder, dictionaryOffset) {\r\n  builder.addFieldOffset(4, dictionaryOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} childrenOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addChildren = function(builder, childrenOffset) {\r\n  builder.addFieldOffset(5, childrenOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<flatbuffers.Offset>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Field.createChildrenVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Field.startChildrenVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} layoutOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addLayout = function(builder, layoutOffset) {\r\n  builder.addFieldOffset(6, layoutOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<flatbuffers.Offset>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Field.createLayoutVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Field.startLayoutVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} customMetadataOffset\r\n */\r\norg.apache.arrow.flatbuf.Field.addCustomMetadata = function(builder, customMetadataOffset) {\r\n  builder.addFieldOffset(7, customMetadataOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<flatbuffers.Offset>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Field.createCustomMetadataVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Field.startCustomMetadataVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Field.endField = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * A Buffer represents a single contiguous memory segment\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Buffer = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Buffer}\r\n */\r\norg.apache.arrow.flatbuf.Buffer.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * The shared memory page id where this buffer is located. Currently this is\r\n * not used\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Buffer.prototype.page = function() {\r\n  return this.bb.readInt32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * The relative offset into the shared memory page where the bytes for this\r\n * buffer starts\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.Buffer.prototype.offset = function() {\r\n  return this.bb.readInt64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * The absolute length (in bytes) of the memory buffer. The memory is found\r\n * from offset (inclusive) to offset + length (non-inclusive).\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.Buffer.prototype.length = function() {\r\n  return this.bb.readInt64(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} page\r\n * @param {flatbuffers.Long} offset\r\n * @param {flatbuffers.Long} length\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Buffer.createBuffer = function(builder, page, offset, length) {\r\n  builder.prep(8, 24);\r\n  builder.writeInt64(length);\r\n  builder.writeInt64(offset);\r\n  builder.pad(4);\r\n  builder.writeInt32(page);\r\n  return builder.offset();\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * A Schema describes the columns in a row batch\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Schema = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Schema}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Schema=} obj\r\n * @returns {org.apache.arrow.flatbuf.Schema}\r\n */\r\norg.apache.arrow.flatbuf.Schema.getRootAsSchema = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * endianness of the buffer\r\n * it is Little Endian by default\r\n * if endianness doesn't match the underlying system then the vectors need to be converted\r\n *\r\n * @returns {org.apache.arrow.flatbuf.Endianness}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.endianness = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.Endianness} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.Field=} obj\r\n * @returns {org.apache.arrow.flatbuf.Field}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.fields = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.fieldsLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.KeyValue=} obj\r\n * @returns {org.apache.arrow.flatbuf.KeyValue}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.customMetadata = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Schema.prototype.customMetadataLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Schema.startSchema = function(builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.Endianness} endianness\r\n */\r\norg.apache.arrow.flatbuf.Schema.addEndianness = function(builder, endianness) {\r\n  builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} fieldsOffset\r\n */\r\norg.apache.arrow.flatbuf.Schema.addFields = function(builder, fieldsOffset) {\r\n  builder.addFieldOffset(1, fieldsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<flatbuffers.Offset>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Schema.createFieldsVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Schema.startFieldsVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} customMetadataOffset\r\n */\r\norg.apache.arrow.flatbuf.Schema.addCustomMetadata = function(builder, customMetadataOffset) {\r\n  builder.addFieldOffset(2, customMetadataOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {Array.<flatbuffers.Offset>} data\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Schema.createCustomMetadataVector = function(builder, data) {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Schema.startCustomMetadataVector = function(builder, numElems) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Schema.endSchema = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} offset\r\n */\r\norg.apache.arrow.flatbuf.Schema.finishSchemaBuffer = function(builder, offset) {\r\n  builder.finish(offset);\r\n};\r\n\r\n// Exports for Node.js and RequireJS\r\nexports.org = org;\r\n",null,null,null,"/**\r\n * closure-compiler-friendly flatbuffers\r\n * copied from node_modules/flatbuffers/js/flatbuffers.js\r\n * update as needed\r\n */\r\n\r\n /// @file\r\n/// @addtogroup flatbuffers_javascript_api\r\n/// @{\r\n/// @cond FLATBUFFERS_INTERNAL\r\n\r\ngoog.module(\"module$flatbuffers\");\r\ngoog.module.declareLegacyNamespace();\r\n/**\r\n * @fileoverview\r\n *\r\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\r\n * closure compile to error out.\r\n * @suppress {globalThis}\r\n */\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\nvar flatbuffers = {};\r\n\r\n/**\r\n * @typedef {number}\r\n */\r\nflatbuffers.Offset;\r\n\r\n/**\r\n * @typedef {{\r\n *   bb: flatbuffers.ByteBuffer,\r\n *   bb_pos: number\r\n * }}\r\n */\r\nflatbuffers.Table;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nflatbuffers.SIZEOF_SHORT = 2;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nflatbuffers.SIZEOF_INT = 4;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nflatbuffers.Encoding = {\r\n  UTF8_BYTES: 1,\r\n  UTF16_STRING: 2\r\n};\r\n\r\n/**\r\n * @type {Int32Array}\r\n * @const\r\n */\r\nflatbuffers.int32 = new Int32Array(2);\r\n\r\n/**\r\n * @type {Float32Array}\r\n * @const\r\n */\r\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\r\n\r\n/**\r\n * @type {Float64Array}\r\n * @const\r\n */\r\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\r\n\r\n/**\r\n * @type {boolean}\r\n * @const\r\n */\r\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * @constructor\r\n * @param {number} low\r\n * @param {number} high\r\n */\r\nflatbuffers.Long = function(low, high) {\r\n  /**\r\n   * @type {number}\r\n   * @const\r\n   */\r\n  this.low = low | 0;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @const\r\n   */\r\n  this.high = high | 0;\r\n};\r\n\r\n/**\r\n * @param {number} low\r\n * @param {number} high\r\n * @returns {flatbuffers.Long}\r\n */\r\nflatbuffers.Long.create = function(low, high) {\r\n  // Special-case zero to avoid GC overhead for default values\r\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nflatbuffers.Long.prototype.toFloat64 = function() {\r\n  return (this.low >>> 0) + this.high * 0x100000000;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Long} other\r\n * @returns {boolean}\r\n */\r\nflatbuffers.Long.prototype.equals = function(other) {\r\n  return this.low == other.low && this.high == other.high;\r\n};\r\n\r\n/**\r\n * @type {flatbuffers.Long}\r\n * @const\r\n */\r\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\r\n\r\n/// @endcond\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Create a FlatBufferBuilder.\r\n *\r\n * @constructor\r\n * @param {number=} opt_initial_size\r\n */\r\nflatbuffers.Builder = function(opt_initial_size) {\r\n  if (!opt_initial_size) {\r\n    var initial_size = 1024;\r\n  } else {\r\n    var initial_size = opt_initial_size;\r\n  }\r\n\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   * @private\r\n   */\r\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\r\n\r\n  /**\r\n   * Remaining space in the ByteBuffer.\r\n   *\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.space = initial_size;\r\n\r\n  /**\r\n   * Minimum alignment encountered so far.\r\n   *\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.minalign = 1;\r\n\r\n  /**\r\n   * The vtable for the current table.\r\n   *\r\n   * @type {Array.<number>}\r\n   * @private\r\n   */\r\n  this.vtable = null;\r\n\r\n  /**\r\n   * The amount of fields we're actually using.\r\n   *\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.vtable_in_use = 0;\r\n\r\n  /**\r\n   * Whether we are currently serializing a table.\r\n   *\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this.isNested = false;\r\n\r\n  /**\r\n   * Starting offset of the current struct/table.\r\n   *\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.object_start = 0;\r\n\r\n  /**\r\n   * List of offsets of all vtables.\r\n   *\r\n   * @type {Array.<number>}\r\n   * @private\r\n   */\r\n  this.vtables = [];\r\n\r\n  /**\r\n   * For the current vector being built.\r\n   *\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.vector_num_elems = 0;\r\n\r\n  /**\r\n   * False omits default values from the serialized data\r\n   *\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this.force_defaults = false;\r\n};\r\n\r\n/**\r\n * In order to save space, fields that are set to their default value\r\n * don't get serialized into the buffer. Forcing defaults provides a\r\n * way to manually disable this optimization.\r\n *\r\n * @param {boolean} forceDefaults true always serializes default values\r\n */\r\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\r\n  this.force_defaults = forceDefaults;\r\n};\r\n\r\n/**\r\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n * called finish(). The actual data starts at the ByteBuffer's current position,\r\n * not necessarily at 0.\r\n *\r\n * @returns {flatbuffers.ByteBuffer}\r\n */\r\nflatbuffers.Builder.prototype.dataBuffer = function() {\r\n  return this.bb;\r\n};\r\n\r\n/**\r\n * Get the bytes representing the FlatBuffer. Only call this after you've\r\n * called finish().\r\n *\r\n * @returns {Uint8Array}\r\n */\r\nflatbuffers.Builder.prototype.asUint8Array = function() {\r\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n};\r\n\r\n/// @cond FLATBUFFERS_INTERNAL\r\n/**\r\n * Prepare to write an element of `size` after `additional_bytes` have been\r\n * written, e.g. if you write a string, you need to align such the int length\r\n * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n * you need to do is alignment, `additional_bytes` will be 0.\r\n *\r\n * @param {number} size This is the of the new element to write\r\n * @param {number} additional_bytes The padding size\r\n */\r\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\r\n  // Track the biggest thing we've ever aligned to.\r\n  if (size > this.minalign) {\r\n    this.minalign = size;\r\n  }\r\n\r\n  // Find the amount of alignment needed such that `size` is properly\r\n  // aligned after `additional_bytes`\r\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n\r\n  // Reallocate the buffer if needed.\r\n  while (this.space < align_size + size + additional_bytes) {\r\n    var old_buf_size = this.bb.capacity();\r\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\r\n    this.space += this.bb.capacity() - old_buf_size;\r\n  }\r\n\r\n  this.pad(align_size);\r\n};\r\n\r\n/**\r\n * @param {number} byte_size\r\n */\r\nflatbuffers.Builder.prototype.pad = function(byte_size) {\r\n  for (var i = 0; i < byte_size; i++) {\r\n    this.bb.writeInt8(--this.space, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n */\r\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\r\n  this.bb.writeInt8(this.space -= 1, value);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n */\r\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\r\n  this.bb.writeInt16(this.space -= 2, value);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n */\r\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\r\n  this.bb.writeInt32(this.space -= 4, value);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Long} value\r\n */\r\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\r\n  this.bb.writeInt64(this.space -= 8, value);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n */\r\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\r\n  this.bb.writeFloat32(this.space -= 4, value);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n */\r\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\r\n  this.bb.writeFloat64(this.space -= 8, value);\r\n};\r\n/// @endcond\r\n\r\n/**\r\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {number} value The `int8` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addInt8 = function(value) {\r\n  this.prep(1, 0);\r\n  this.writeInt8(value);\r\n};\r\n\r\n/**\r\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {number} value The `int16` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addInt16 = function(value) {\r\n  this.prep(2, 0);\r\n  this.writeInt16(value);\r\n};\r\n\r\n/**\r\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {number} value The `int32` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addInt32 = function(value) {\r\n  this.prep(4, 0);\r\n  this.writeInt32(value);\r\n};\r\n\r\n/**\r\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addInt64 = function(value) {\r\n  this.prep(8, 0);\r\n  this.writeInt64(value);\r\n};\r\n\r\n/**\r\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {number} value The `float32` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\r\n  this.prep(4, 0);\r\n  this.writeFloat32(value);\r\n};\r\n\r\n/**\r\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n * @param {number} value The `float64` to add the the buffer.\r\n */\r\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\r\n  this.prep(8, 0);\r\n  this.writeFloat64(value);\r\n};\r\n\r\n/// @cond FLATBUFFERS_INTERNAL\r\n/**\r\n * @param {number} voffset\r\n * @param {number} value\r\n * @param {number} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addInt8(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {number} value\r\n * @param {number} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addInt16(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {number} value\r\n * @param {number} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addInt32(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {flatbuffers.Long} value\r\n * @param {flatbuffers.Long} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || !value.equals(defaultValue)) {\r\n    this.addInt64(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {number} value\r\n * @param {number} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addFloat32(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {number} value\r\n * @param {number} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addFloat64(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} voffset\r\n * @param {flatbuffers.Offset} value\r\n * @param {flatbuffers.Offset} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\r\n  if (this.force_defaults || value != defaultValue) {\r\n    this.addOffset(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n *\r\n * @param {number} voffset\r\n * @param {flatbuffers.Offset} value\r\n * @param {flatbuffers.Offset} defaultValue\r\n */\r\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\r\n  if (value != defaultValue) {\r\n    this.nested(value);\r\n    this.slot(voffset);\r\n  }\r\n};\r\n\r\n/**\r\n * Structures are always stored inline, they need to be created right\r\n * where they're used.  You'll get this assertion failure if you\r\n * created it elsewhere.\r\n *\r\n * @param {flatbuffers.Offset} obj The offset of the created object\r\n */\r\nflatbuffers.Builder.prototype.nested = function(obj) {\r\n  if (obj != this.offset()) {\r\n    throw new Error('FlatBuffers: struct must be serialized inline.');\r\n  }\r\n};\r\n\r\n/**\r\n * Should not be creating any other object, string or vector\r\n * while an object is being constructed\r\n */\r\nflatbuffers.Builder.prototype.notNested = function() {\r\n  if (this.isNested) {\r\n    throw new Error('FlatBuffers: object serialization must not be nested.');\r\n  }\r\n};\r\n\r\n/**\r\n * Set the current vtable at `voffset` to the current location in the buffer.\r\n *\r\n * @param {number} voffset\r\n */\r\nflatbuffers.Builder.prototype.slot = function(voffset) {\r\n  this.vtable[voffset] = this.offset();\r\n};\r\n\r\n/**\r\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\r\n */\r\nflatbuffers.Builder.prototype.offset = function() {\r\n  return this.bb.capacity() - this.space;\r\n};\r\n\r\n/**\r\n * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n * the end of the new buffer (since we build the buffer backwards).\r\n *\r\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\r\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\r\n * to it. The data is located at the end of the buffer.\r\n *\r\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n * it a uint8Array we need to suppress the type check:\r\n * @suppress {checkTypes}\r\n */\r\nflatbuffers.Builder.growByteBuffer = function(bb) {\r\n  var old_buf_size = bb.capacity();\r\n\r\n  // Ensure we don't grow beyond what fits in an int.\r\n  if (old_buf_size & 0xC0000000) {\r\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n  }\r\n\r\n  var new_buf_size = old_buf_size << 1;\r\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\r\n  nbb.setPosition(new_buf_size - old_buf_size);\r\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n  return nbb;\r\n};\r\n/// @endcond\r\n\r\n/**\r\n * Adds on offset, relative to where it will be written.\r\n *\r\n * @param {flatbuffers.Offset} offset The offset to add.\r\n */\r\nflatbuffers.Builder.prototype.addOffset = function(offset) {\r\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\r\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\r\n};\r\n\r\n/// @cond FLATBUFFERS_INTERNAL\r\n/**\r\n * Start encoding a new object in the buffer.  Users will not usually need to\r\n * call this directly. The FlatBuffers compiler will generate helper methods\r\n * that call this method internally.\r\n *\r\n * @param {number} numfields\r\n */\r\nflatbuffers.Builder.prototype.startObject = function(numfields) {\r\n  this.notNested();\r\n  if (this.vtable == null) {\r\n    this.vtable = [];\r\n  }\r\n  this.vtable_in_use = numfields;\r\n  for (var i = 0; i < numfields; i++) {\r\n    this.vtable[i] = 0; // This will push additional elements as needed\r\n  }\r\n  this.isNested = true;\r\n  this.object_start = this.offset();\r\n};\r\n\r\n/**\r\n * Finish off writing the object that is under construction.\r\n *\r\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\r\n */\r\nflatbuffers.Builder.prototype.endObject = function() {\r\n  if (this.vtable == null || !this.isNested) {\r\n    throw new Error('FlatBuffers: endObject called without startObject');\r\n  }\r\n\r\n  this.addInt32(0);\r\n  var vtableloc = this.offset();\r\n\r\n  // Write out the current vtable.\r\n  for (var i = this.vtable_in_use - 1; i >= 0; i--) {\r\n    // Offset relative to the start of the table.\r\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n  }\r\n\r\n  var standard_fields = 2; // The fields below:\r\n  this.addInt16(vtableloc - this.object_start);\r\n  this.addInt16((this.vtable_in_use + standard_fields) * flatbuffers.SIZEOF_SHORT);\r\n\r\n  // Search for an existing vtable that matches the current one.\r\n  var existing_vtable = 0;\r\nouter_loop:\r\n  for (var i = 0; i < this.vtables.length; i++) {\r\n    var vt1 = this.bb.capacity() - this.vtables[i];\r\n    var vt2 = this.space;\r\n    var len = this.bb.readInt16(vt1);\r\n    if (len == this.bb.readInt16(vt2)) {\r\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\r\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n          continue outer_loop;\r\n        }\r\n      }\r\n      existing_vtable = this.vtables[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (existing_vtable) {\r\n    // Found a match:\r\n    // Remove the current vtable.\r\n    this.space = this.bb.capacity() - vtableloc;\r\n\r\n    // Point table to existing vtable.\r\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n  } else {\r\n    // No match:\r\n    // Add the location of the current vtable to the list of vtables.\r\n    this.vtables.push(this.offset());\r\n\r\n    // Point table to current vtable.\r\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n  }\r\n\r\n  this.isNested = false;\r\n  return vtableloc;\r\n};\r\n/// @endcond\r\n\r\n/**\r\n * Finalize a buffer, poiting to the given `root_table`.\r\n *\r\n * @param {flatbuffers.Offset} root_table\r\n * @param {string=} opt_file_identifier\r\n */\r\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\r\n  if (opt_file_identifier) {\r\n    var file_identifier = opt_file_identifier;\r\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\r\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\r\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\r\n      throw new Error('FlatBuffers: file identifier must be length ' +\r\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\r\n    }\r\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n      this.writeInt8(file_identifier.charCodeAt(i));\r\n    }\r\n  }\r\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\r\n  this.addOffset(root_table);\r\n  this.bb.setPosition(this.space);\r\n};\r\n\r\n/// @cond FLATBUFFERS_INTERNAL\r\n/**\r\n * This checks a required field has been set in a given table that has\r\n * just been constructed.\r\n *\r\n * @param {flatbuffers.Offset} table\r\n * @param {number} field\r\n */\r\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\r\n  var table_start = this.bb.capacity() - table;\r\n  var vtable_start = table_start - this.bb.readInt32(table_start);\r\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\r\n\r\n  // If this fails, the caller will show what field needs to be set.\r\n  if (!ok) {\r\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n  }\r\n};\r\n\r\n/**\r\n * Start a new array/vector of objects.  Users usually will not call\r\n * this directly. The FlatBuffers compiler will create a start/end\r\n * method for vector types in generated code.\r\n *\r\n * @param {number} elem_size The size of each element in the array\r\n * @param {number} num_elems The number of elements in the array\r\n * @param {number} alignment The alignment of the array\r\n */\r\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\r\n  this.notNested();\r\n  this.vector_num_elems = num_elems;\r\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\r\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n};\r\n\r\n/**\r\n * Finish off the creation of an array and all its elements. The array must be\r\n * created with `startVector`.\r\n *\r\n * @returns {flatbuffers.Offset} The offset at which the newly created array\r\n * starts.\r\n */\r\nflatbuffers.Builder.prototype.endVector = function() {\r\n  this.writeInt32(this.vector_num_elems);\r\n  return this.offset();\r\n};\r\n/// @endcond\r\n\r\n/**\r\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n *\r\n * @param {string|Uint8Array} s The string to encode\r\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\r\n */\r\nflatbuffers.Builder.prototype.createString = function(s) {\r\n  if (s instanceof Uint8Array) {\r\n    var utf8 = s;\r\n  } else {\r\n    var utf8 = [];\r\n    var i = 0;\r\n\r\n    while (i < s.length) {\r\n      var codePoint;\r\n\r\n      // Decode UTF-16\r\n      var a = s.charCodeAt(i++);\r\n      if (a < 0xD800 || a >= 0xDC00) {\r\n        codePoint = a;\r\n      } else {\r\n        var b = s.charCodeAt(i++);\r\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n      }\r\n\r\n      // Encode UTF-8\r\n      if (codePoint < 0x80) {\r\n        utf8.push(codePoint);\r\n      } else {\r\n        if (codePoint < 0x800) {\r\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n        } else {\r\n          if (codePoint < 0x10000) {\r\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n          } else {\r\n            utf8.push(\r\n              ((codePoint >> 18) & 0x07) | 0xF0,\r\n              ((codePoint >> 12) & 0x3F) | 0x80);\r\n          }\r\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n        }\r\n        utf8.push((codePoint & 0x3F) | 0x80);\r\n      }\r\n    }\r\n  }\r\n\r\n  this.addInt8(0);\r\n  this.startVector(1, utf8.length, 1);\r\n  this.bb.setPosition(this.space -= utf8.length);\r\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n    bytes[offset++] = utf8[i];\r\n  }\r\n  return this.endVector();\r\n};\r\n\r\n/**\r\n * A helper function to avoid generated code depending on this file directly.\r\n *\r\n * @param {number} low\r\n * @param {number} high\r\n * @returns {flatbuffers.Long}\r\n */\r\nflatbuffers.Builder.prototype.createLong = function(low, high) {\r\n  return flatbuffers.Long.create(low, high);\r\n};\r\n////////////////////////////////////////////////////////////////////////////////\r\n/// @cond FLATBUFFERS_INTERNAL\r\n/**\r\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\r\n *\r\n * @constructor\r\n * @param {Uint8Array} bytes\r\n */\r\nflatbuffers.ByteBuffer = function(bytes) {\r\n  /**\r\n   * @type {Uint8Array}\r\n   * @private\r\n   */\r\n  this.bytes_ = bytes;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.position_ = 0;\r\n};\r\n\r\n/**\r\n * Create and allocate a new ByteBuffer with a given size.\r\n *\r\n * @param {number} byte_size\r\n * @returns {flatbuffers.ByteBuffer}\r\n */\r\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\r\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\r\n};\r\n\r\n/**\r\n * Get the underlying `Uint8Array`.\r\n *\r\n * @returns {Uint8Array}\r\n */\r\nflatbuffers.ByteBuffer.prototype.bytes = function() {\r\n  return this.bytes_;\r\n};\r\n\r\n/**\r\n * Get the buffer's position.\r\n *\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.position = function() {\r\n  return this.position_;\r\n};\r\n\r\n/**\r\n * Set the buffer's position.\r\n *\r\n * @param {number} position\r\n */\r\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\r\n  this.position_ = position;\r\n};\r\n\r\n/**\r\n * Get the buffer's capacity.\r\n *\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.capacity = function() {\r\n  return this.bytes_.length;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\r\n  return this.readUint8(offset) << 24 >> 24;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\r\n  return this.bytes_[offset];\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\r\n  return this.readUint16(offset) << 16 >> 16;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\r\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\r\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\r\n  return this.readInt32(offset) >>> 0;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {flatbuffers.Long}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\r\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {flatbuffers.Long}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\r\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\r\n  flatbuffers.int32[0] = this.readInt32(offset);\r\n  return flatbuffers.float32[0];\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\r\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n  return flatbuffers.float64[0];\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number|boolean} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\r\n  this.bytes_[offset] = /** @type {number} */(value);\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\r\n  this.bytes_[offset] = value;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\r\n  this.bytes_[offset] = value;\r\n  this.bytes_[offset + 1] = value >> 8;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\r\n    this.bytes_[offset] = value;\r\n    this.bytes_[offset + 1] = value >> 8;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\r\n  this.bytes_[offset] = value;\r\n  this.bytes_[offset + 1] = value >> 8;\r\n  this.bytes_[offset + 2] = value >> 16;\r\n  this.bytes_[offset + 3] = value >> 24;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\r\n    this.bytes_[offset] = value;\r\n    this.bytes_[offset + 1] = value >> 8;\r\n    this.bytes_[offset + 2] = value >> 16;\r\n    this.bytes_[offset + 3] = value >> 24;\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {flatbuffers.Long} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\r\n  this.writeInt32(offset, value.low);\r\n  this.writeInt32(offset + 4, value.high);\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {flatbuffers.Long} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\r\n    this.writeUint32(offset, value.low);\r\n    this.writeUint32(offset + 4, value.high);\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\r\n  flatbuffers.float32[0] = value;\r\n  this.writeInt32(offset, flatbuffers.int32[0]);\r\n};\r\n\r\n/**\r\n * @param {number} offset\r\n * @param {number} value\r\n */\r\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\r\n  flatbuffers.float64[0] = value;\r\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\r\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\r\n};\r\n\r\n/**\r\n * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n * field is not present.\r\n *\r\n * @param {number} bb_pos\r\n * @param {number} vtable_offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\r\n  var vtable = bb_pos - this.readInt32(bb_pos);\r\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n};\r\n\r\n/**\r\n * Initialize any Table-derived type to point to the union at the given offset.\r\n *\r\n * @param {flatbuffers.Table} t\r\n * @param {number} offset\r\n * @returns {flatbuffers.Table}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\r\n  t.bb_pos = offset + this.readInt32(offset);\r\n  t.bb = this;\r\n  return t;\r\n};\r\n\r\n/**\r\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n * This allocates a new string and converts to wide chars upon each access.\r\n *\r\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\r\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n * and from UTF-16 when the data will just be packaged back up in another\r\n * FlatBuffer later on.\r\n *\r\n * @param {number} offset\r\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\r\n * @returns {string|Uint8Array}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\r\n  offset += this.readInt32(offset);\r\n\r\n  var length = this.readInt32(offset);\r\n  var result = '';\r\n  var i = 0;\r\n\r\n  offset += flatbuffers.SIZEOF_INT;\r\n\r\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\r\n    return this.bytes_.subarray(offset, offset + length);\r\n  }\r\n\r\n  while (i < length) {\r\n    var codePoint;\r\n\r\n    // Decode UTF-8\r\n    var a = this.readUint8(offset + i++);\r\n    if (a < 0xC0) {\r\n      codePoint = a;\r\n    } else {\r\n      var b = this.readUint8(offset + i++);\r\n      if (a < 0xE0) {\r\n        codePoint =\r\n          ((a & 0x1F) << 6) |\r\n          (b & 0x3F);\r\n      } else {\r\n        var c = this.readUint8(offset + i++);\r\n        if (a < 0xF0) {\r\n          codePoint =\r\n            ((a & 0x0F) << 12) |\r\n            ((b & 0x3F) << 6) |\r\n            (c & 0x3F);\r\n        } else {\r\n          var d = this.readUint8(offset + i++);\r\n          codePoint =\r\n            ((a & 0x07) << 18) |\r\n            ((b & 0x3F) << 12) |\r\n            ((c & 0x3F) << 6) |\r\n            (d & 0x3F);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Encode UTF-16\r\n    if (codePoint < 0x10000) {\r\n      result += String.fromCharCode(codePoint);\r\n    } else {\r\n      codePoint -= 0x10000;\r\n      result += String.fromCharCode(\r\n        (codePoint >> 10) + 0xD800,\r\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Retrieve the relative offset stored at \"offset\"\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\r\n  return offset + this.readInt32(offset);\r\n};\r\n\r\n/**\r\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n *\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\r\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\r\n};\r\n\r\n/**\r\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n *\r\n * @param {number} offset\r\n * @returns {number}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\r\n  return this.readInt32(offset + this.readInt32(offset));\r\n};\r\n\r\n/**\r\n * @param {string} ident\r\n * @returns {boolean}\r\n */\r\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\r\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\r\n    throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\r\n  }\r\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\r\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * A helper function to avoid generated code depending on this file directly.\r\n *\r\n * @param {number} low\r\n * @param {number} high\r\n * @returns {flatbuffers.Long}\r\n */\r\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\r\n  return flatbuffers.Long.create(low, high);\r\n};\r\n\r\n// Exports for Node.js and RequireJS\r\nexports.flatbuffers = flatbuffers;\r\n\r\n/// @endcond\r\n/// @}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\r\ngoog.module(\"module$targets$es5$cls$format$File_generated\");\r\ngoog.module.declareLegacyNamespace();\r\nvar Schema_ = goog.require(\"module$targets$es5$cls$format$Schema_generated\");\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\nvar org = Schema_.org;\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache = org.apache || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow = org.apache.arrow || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow.flatbuf = org.apache.arrow.flatbuf || {};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * Arrow File metadata\r\n *\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Footer = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Footer}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Footer=} obj\r\n * @returns {org.apache.arrow.flatbuf.Footer}\r\n */\r\norg.apache.arrow.flatbuf.Footer.getRootAsFooter = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.MetadataVersion}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.version = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.MetadataVersion} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MetadataVersion.V1;\r\n};\r\n\r\n/**\r\n * @param {org.apache.arrow.flatbuf.Schema=} obj\r\n * @returns {org.apache.arrow.flatbuf.Schema|null}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.schema = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.Block=} obj\r\n * @returns {org.apache.arrow.flatbuf.Block}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.dictionaries = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.dictionariesLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.Block=} obj\r\n * @returns {org.apache.arrow.flatbuf.Block}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.recordBatches = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Footer.prototype.recordBatchesLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Footer.startFooter = function(builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.MetadataVersion} version\r\n */\r\norg.apache.arrow.flatbuf.Footer.addVersion = function(builder, version) {\r\n  builder.addFieldInt16(0, version, org.apache.arrow.flatbuf.MetadataVersion.V1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} schemaOffset\r\n */\r\norg.apache.arrow.flatbuf.Footer.addSchema = function(builder, schemaOffset) {\r\n  builder.addFieldOffset(1, schemaOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} dictionariesOffset\r\n */\r\norg.apache.arrow.flatbuf.Footer.addDictionaries = function(builder, dictionariesOffset) {\r\n  builder.addFieldOffset(2, dictionariesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Footer.startDictionariesVector = function(builder, numElems) {\r\n  builder.startVector(24, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} recordBatchesOffset\r\n */\r\norg.apache.arrow.flatbuf.Footer.addRecordBatches = function(builder, recordBatchesOffset) {\r\n  builder.addFieldOffset(3, recordBatchesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.Footer.startRecordBatchesVector = function(builder, numElems) {\r\n  builder.startVector(24, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Footer.endFooter = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} offset\r\n */\r\norg.apache.arrow.flatbuf.Footer.finishFooterBuffer = function(builder, offset) {\r\n  builder.finish(offset);\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Block = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Block}\r\n */\r\norg.apache.arrow.flatbuf.Block.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Index to the start of the RecordBlock (note this is past the Message header)\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.Block.prototype.offset = function() {\r\n  return this.bb.readInt64(this.bb_pos);\r\n};\r\n\r\n/**\r\n * Length of the metadata\r\n *\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.Block.prototype.metaDataLength = function() {\r\n  return this.bb.readInt32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * Length of the data (this is aligned so there can be a gap between this and\r\n * the metatdata).\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.Block.prototype.bodyLength = function() {\r\n  return this.bb.readInt64(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} offset\r\n * @param {number} metaDataLength\r\n * @param {flatbuffers.Long} bodyLength\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Block.createBlock = function(builder, offset, metaDataLength, bodyLength) {\r\n  builder.prep(8, 24);\r\n  builder.writeInt64(bodyLength);\r\n  builder.pad(4);\r\n  builder.writeInt32(metaDataLength);\r\n  builder.writeInt64(offset);\r\n  return builder.offset();\r\n};\r\n\r\n// Exports for Node.js and RequireJS\r\nexports.org = org;\r\n","// automatically generated by the FlatBuffers compiler, do not modify\r\ngoog.module(\"module$targets$es5$cls$format$Message_generated\");\r\ngoog.module.declareLegacyNamespace();\r\nvar Schema_ = goog.require(\"module$targets$es5$cls$format$Schema_generated\");\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\nvar org = Schema_.org;\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache = org.apache || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow = org.apache.arrow || {};\r\n\r\n/**\r\n * @const\r\n * @namespace\r\n */\r\norg.apache.arrow.flatbuf = org.apache.arrow.flatbuf || {};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * The root Message type\r\n * This union enables us to easily send different message types without\r\n * redundant storage, and in the future we can easily add new message types.\r\n *\r\n * Arrow implementations do not need to implement all of the message types,\r\n * which may include experimental metadata types. For maximum compatibility,\r\n * it is best to send data using RecordBatch\r\n *\r\n * @enum\r\n */\r\norg.apache.arrow.flatbuf.MessageHeader = {\r\n  NONE: 0, 0: 'NONE',\r\n  Schema: 1, 1: 'Schema',\r\n  DictionaryBatch: 2, 2: 'DictionaryBatch',\r\n  RecordBatch: 3, 3: 'RecordBatch',\r\n  Tensor: 4, 4: 'Tensor',\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * Data structures for describing a table row batch (a collection of\r\n * equal-length Arrow arrays)\r\n * Metadata about a field at some level of a nested type tree (but not\r\n * its children).\r\n *\r\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\r\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\r\n * null_count: 0} for its Int16 node, as separate FieldNode structs\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.FieldNode = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.FieldNode}\r\n */\r\norg.apache.arrow.flatbuf.FieldNode.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * The number of value slots in the Arrow array at this level of a nested\r\n * tree\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.FieldNode.prototype.length = function() {\r\n  return this.bb.readInt64(this.bb_pos);\r\n};\r\n\r\n/**\r\n * The number of observed nulls. Fields with null_count == 0 may choose not\r\n * to write their physical validity bitmap out as a materialized buffer,\r\n * instead setting the length of the bitmap buffer to 0.\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.FieldNode.prototype.nullCount = function() {\r\n  return this.bb.readInt64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} length\r\n * @param {flatbuffers.Long} null_count\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.FieldNode.createFieldNode = function(builder, length, null_count) {\r\n  builder.prep(8, 16);\r\n  builder.writeInt64(null_count);\r\n  builder.writeInt64(length);\r\n  return builder.offset();\r\n};\r\n\r\n/**\r\n * A data header describing the shared memory layout of a \"record\" or \"row\"\r\n * batch. Some systems call this a \"row batch\" internally and others a \"record\r\n * batch\".\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.RecordBatch}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.RecordBatch=} obj\r\n * @returns {org.apache.arrow.flatbuf.RecordBatch}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.getRootAsRecordBatch = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * number of records / rows. The arrays in the batch should all have this\r\n * length\r\n *\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.length = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * Nodes correspond to the pre-ordered flattened logical schema\r\n *\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.FieldNode=} obj\r\n * @returns {org.apache.arrow.flatbuf.FieldNode}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.nodes = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.nodesLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * Buffers correspond to the pre-ordered flattened buffer tree\r\n *\r\n * The number of buffers appended to this list depends on the schema. For\r\n * example, most primitive arrays will have 2 buffers, 1 for the validity\r\n * bitmap and 1 for the values. For struct arrays, there will only be a\r\n * single buffer for the validity (nulls) bitmap\r\n *\r\n * @param {number} index\r\n * @param {org.apache.arrow.flatbuf.Buffer=} obj\r\n * @returns {org.apache.arrow.flatbuf.Buffer}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.buffers = function(index, obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.prototype.buffersLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.startRecordBatch = function(builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} length\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.addLength = function(builder, length) {\r\n  builder.addFieldInt64(0, length, builder.createLong(0, 0));\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} nodesOffset\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.addNodes = function(builder, nodesOffset) {\r\n  builder.addFieldOffset(1, nodesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.startNodesVector = function(builder, numElems) {\r\n  builder.startVector(16, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} buffersOffset\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.addBuffers = function(builder, buffersOffset) {\r\n  builder.addFieldOffset(2, buffersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {number} numElems\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.startBuffersVector = function(builder, numElems) {\r\n  builder.startVector(24, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.RecordBatch.endRecordBatch = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * ----------------------------------------------------------------------\r\n * For sending dictionary encoding information. Any Field can be\r\n * dictionary-encoded, but in this case none of its children may be\r\n * dictionary-encoded.\r\n * There is one vector / column per dictionary\r\n *\r\n *\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.DictionaryBatch}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.DictionaryBatch=} obj\r\n * @returns {org.apache.arrow.flatbuf.DictionaryBatch}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.getRootAsDictionaryBatch = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.prototype.id = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * @param {org.apache.arrow.flatbuf.RecordBatch=} obj\r\n * @returns {org.apache.arrow.flatbuf.RecordBatch|null}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.prototype.data = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.startDictionaryBatch = function(builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} id\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.addId = function(builder, id) {\r\n  builder.addFieldInt64(0, id, builder.createLong(0, 0));\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} dataOffset\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.addData = function(builder, dataOffset) {\r\n  builder.addFieldOffset(1, dataOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.DictionaryBatch.endDictionaryBatch = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @constructor\r\n */\r\norg.apache.arrow.flatbuf.Message = function() {\r\n  /**\r\n   * @type {flatbuffers.ByteBuffer}\r\n   */\r\n  this.bb = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.bb_pos = 0;\r\n};\r\n\r\n/**\r\n * @param {number} i\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @returns {org.apache.arrow.flatbuf.Message}\r\n */\r\norg.apache.arrow.flatbuf.Message.prototype.__init = function(i, bb) {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.ByteBuffer} bb\r\n * @param {org.apache.arrow.flatbuf.Message=} obj\r\n * @returns {org.apache.arrow.flatbuf.Message}\r\n */\r\norg.apache.arrow.flatbuf.Message.getRootAsMessage = function(bb, obj) {\r\n  return (obj || new org.apache.arrow.flatbuf.Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.MetadataVersion}\r\n */\r\norg.apache.arrow.flatbuf.Message.prototype.version = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 4);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.MetadataVersion} */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MetadataVersion.V1;\r\n};\r\n\r\n/**\r\n * @returns {org.apache.arrow.flatbuf.MessageHeader}\r\n */\r\norg.apache.arrow.flatbuf.Message.prototype.headerType = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 6);\r\n  return offset ? /** @type {org.apache.arrow.flatbuf.MessageHeader} */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Table} obj\r\n * @returns {?flatbuffers.Table}\r\n */\r\norg.apache.arrow.flatbuf.Message.prototype.header = function(obj) {\r\n  var offset = this.bb.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\r\n};\r\n\r\n/**\r\n * @returns {flatbuffers.Long}\r\n */\r\norg.apache.arrow.flatbuf.Message.prototype.bodyLength = function() {\r\n  var offset = this.bb.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n */\r\norg.apache.arrow.flatbuf.Message.startMessage = function(builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.MetadataVersion} version\r\n */\r\norg.apache.arrow.flatbuf.Message.addVersion = function(builder, version) {\r\n  builder.addFieldInt16(0, version, org.apache.arrow.flatbuf.MetadataVersion.V1);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {org.apache.arrow.flatbuf.MessageHeader} headerType\r\n */\r\norg.apache.arrow.flatbuf.Message.addHeaderType = function(builder, headerType) {\r\n  builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} headerOffset\r\n */\r\norg.apache.arrow.flatbuf.Message.addHeader = function(builder, headerOffset) {\r\n  builder.addFieldOffset(2, headerOffset, 0);\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Long} bodyLength\r\n */\r\norg.apache.arrow.flatbuf.Message.addBodyLength = function(builder, bodyLength) {\r\n  builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @returns {flatbuffers.Offset}\r\n */\r\norg.apache.arrow.flatbuf.Message.endMessage = function(builder) {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @param {flatbuffers.Builder} builder\r\n * @param {flatbuffers.Offset} offset\r\n */\r\norg.apache.arrow.flatbuf.Message.finishMessageBuffer = function(builder, offset) {\r\n  builder.finish(offset);\r\n};\r\n\r\n// Exports for Node.js and RequireJS\r\nexports.org = org;\r\n","/**\r\n * closure-compiler-friendly text-encoding-utf-8\r\n * copied from node_modules/text-encoding-utf-8/lib/encoding.cjs.js\r\n * update as needed\r\n */\r\n\r\n // This is free and unencumbered software released into the public domain.\r\n// See LICENSE.md for more information.\r\n\r\n//\r\n// Utilities\r\n//\r\n\r\ngoog.module(\"module$text_encoding\");\r\ngoog.module.declareLegacyNamespace();\r\n/**\r\n * @param {number} a The number to test.\r\n * @param {number} min The minimum value in the range, inclusive.\r\n * @param {number} max The maximum value in the range, inclusive.\r\n * @return {boolean} True if a >= min and a <= max.\r\n */\r\nfunction inRange(a, min, max) {\r\n  return min <= a && a <= max;\r\n}\r\n\r\n/**\r\n * @param {*} o\r\n * @return {Object}\r\n */\r\nfunction ToDictionary(o) {\r\n  if (o === undefined) return {};\r\n  if (o === Object(o)) return o;\r\n  throw TypeError('Could not convert argument to dictionary');\r\n}\r\n\r\n/**\r\n * @param {string} string Input string of UTF-16 code units.\r\n * @return {!Array.<number>} Code points.\r\n */\r\nfunction stringToCodePoints(string) {\r\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\r\n\r\n  // 1. Let S be the DOMString value.\r\n  var s = String(string);\r\n\r\n  // 2. Let n be the length of S.\r\n  var n = s.length;\r\n\r\n  // 3. Initialize i to 0.\r\n  var i = 0;\r\n\r\n  // 4. Initialize U to be an empty sequence of Unicode characters.\r\n  var u = [];\r\n\r\n  // 5. While i < n:\r\n  while (i < n) {\r\n\r\n    // 1. Let c be the code unit in S at index i.\r\n    var c = s.charCodeAt(i);\r\n\r\n    // 2. Depending on the value of c:\r\n\r\n    // c < 0xD800 or c > 0xDFFF\r\n    if (c < 0xD800 || c > 0xDFFF) {\r\n      // Append to U the Unicode character with code point c.\r\n      u.push(c);\r\n    }\r\n\r\n    // 0xDC00 ≤ c ≤ 0xDFFF\r\n    else if (0xDC00 <= c && c <= 0xDFFF) {\r\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\r\n      u.push(0xFFFD);\r\n    }\r\n\r\n    // 0xD800 ≤ c ≤ 0xDBFF\r\n    else if (0xD800 <= c && c <= 0xDBFF) {\r\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\r\n      // CHARACTER.\r\n      if (i === n - 1) {\r\n        u.push(0xFFFD);\r\n      }\r\n      // 2. Otherwise, i < n−1:\r\n      else {\r\n        // 1. Let d be the code unit in S at index i+1.\r\n        var d = string.charCodeAt(i + 1);\r\n\r\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\r\n        if (0xDC00 <= d && d <= 0xDFFF) {\r\n          // 1. Let a be c & 0x3FF.\r\n          var a = c & 0x3FF;\r\n\r\n          // 2. Let b be d & 0x3FF.\r\n          var b = d & 0x3FF;\r\n\r\n          // 3. Append to U the Unicode character with code point\r\n          // 2^16+2^10*a+b.\r\n          u.push(0x10000 + (a << 10) + b);\r\n\r\n          // 4. Set i to i+1.\r\n          i += 1;\r\n        }\r\n\r\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\r\n        // U+FFFD REPLACEMENT CHARACTER.\r\n        else  {\r\n          u.push(0xFFFD);\r\n        }\r\n      }\r\n    }\r\n\r\n    // 3. Set i to i+1.\r\n    i += 1;\r\n  }\r\n\r\n  // 6. Return U.\r\n  return u;\r\n}\r\n\r\n/**\r\n * @param {!Array.<number>} code_points Array of code points.\r\n * @return {string} string String of UTF-16 code units.\r\n */\r\nfunction codePointsToString(code_points) {\r\n  var s = '';\r\n  for (var i = 0; i < code_points.length; ++i) {\r\n    var cp = code_points[i];\r\n    if (cp <= 0xFFFF) {\r\n      s += String.fromCharCode(cp);\r\n    } else {\r\n      cp -= 0x10000;\r\n      s += String.fromCharCode((cp >> 10) + 0xD800,\r\n                               (cp & 0x3FF) + 0xDC00);\r\n    }\r\n  }\r\n  return s;\r\n}\r\n\r\n\r\n//\r\n// Implementation of Encoding specification\r\n// https://encoding.spec.whatwg.org/\r\n//\r\n\r\n//\r\n// 3. Terminology\r\n//\r\n\r\n/**\r\n * End-of-stream is a special token that signifies no more tokens\r\n * are in the stream.\r\n * @const\r\n */ var end_of_stream = -1;\r\n\r\n/**\r\n * A stream represents an ordered sequence of tokens.\r\n *\r\n * @constructor\r\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\r\n * stream.\r\n */\r\nfunction Stream(tokens) {\r\n  /** @type {!Array.<number>} */\r\n  this.tokens = [].slice.call(tokens);\r\n}\r\n\r\nStream.prototype = {\r\n  /**\r\n   * @return {boolean} True if end-of-stream has been hit.\r\n   */\r\n  endOfStream: function() {\r\n    return !this.tokens.length;\r\n  },\r\n\r\n  /**\r\n   * When a token is read from a stream, the first token in the\r\n   * stream must be returned and subsequently removed, and\r\n   * end-of-stream must be returned otherwise.\r\n   *\r\n   * @return {number} Get the next token from the stream, or\r\n   * end_of_stream.\r\n   */\r\n   read: function() {\r\n    if (!this.tokens.length)\r\n      return end_of_stream;\r\n     return this.tokens.shift();\r\n   },\r\n\r\n  /**\r\n   * When one or more tokens are prepended to a stream, those tokens\r\n   * must be inserted, in given order, before the first token in the\r\n   * stream.\r\n   *\r\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\r\n   */\r\n  prepend: function(token) {\r\n    if (Array.isArray(token)) {\r\n      var tokens = /**@type {!Array.<number>}*/(token);\r\n      while (tokens.length)\r\n        this.tokens.unshift(tokens.pop());\r\n    } else {\r\n      this.tokens.unshift(token);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * When one or more tokens are pushed to a stream, those tokens\r\n   * must be inserted, in given order, after the last token in the\r\n   * stream.\r\n   *\r\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\r\n   */\r\n  push: function(token) {\r\n    if (Array.isArray(token)) {\r\n      var tokens = /**@type {!Array.<number>}*/(token);\r\n      while (tokens.length)\r\n        this.tokens.push(tokens.shift());\r\n    } else {\r\n      this.tokens.push(token);\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n// 4. Encodings\r\n//\r\n\r\n// 4.1 Encoders and decoders\r\n\r\n/** @const */\r\nvar finished = -1;\r\n\r\n/**\r\n * @param {boolean} fatal If true, decoding errors raise an exception.\r\n * @param {number=} opt_code_point Override the standard fallback code point.\r\n * @return {number} The code point to insert on a decoding error.\r\n */\r\nfunction decoderError(fatal, opt_code_point) {\r\n  if (fatal)\r\n    throw TypeError('Decoder error');\r\n  return opt_code_point || 0xFFFD;\r\n}\r\n\r\n//\r\n// 7. API\r\n//\r\n\r\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\r\n\r\n// 7.1 Interface TextDecoder\r\n\r\n/**\r\n * @constructor\r\n * @param {string=} encoding The label of the encoding;\r\n *     defaults to 'utf-8'.\r\n * @param {Object=} options\r\n */\r\nfunction TextDecoder(encoding, options) {\r\n  if (!(this instanceof TextDecoder)) {\r\n    return new TextDecoder(encoding, options);\r\n  }\r\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\r\n  if (encoding !== DEFAULT_ENCODING) {\r\n    throw new Error('Encoding not supported. Only utf-8 is supported');\r\n  }\r\n  options = ToDictionary(options);\r\n\r\n  /** @private @type {boolean} */\r\n  this._streaming = false;\r\n  /** @private @type {boolean} */\r\n  this._BOMseen = false;\r\n  /** @private @type {?Decoder} */\r\n  this._decoder = null;\r\n  /** @private @type {boolean} */\r\n  this._fatal = Boolean(options['fatal']);\r\n  /** @private @type {boolean} */\r\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\r\n\r\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\r\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\r\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\r\n}\r\n\r\nTextDecoder.prototype = {\r\n  /**\r\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\r\n   * @param {Object=} options\r\n   * @return {string} The decoded string.\r\n   */\r\n  decode: function decode(input, options) {\r\n    var bytes;\r\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(input);\r\n    } else if (typeof input === 'object' && 'buffer' in input &&\r\n               input.buffer instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(input.buffer,\r\n                             input.byteOffset,\r\n                             input.byteLength);\r\n    } else {\r\n      bytes = new Uint8Array(0);\r\n    }\r\n\r\n    options = ToDictionary(options);\r\n\r\n    if (!this._streaming) {\r\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\r\n      this._BOMseen = false;\r\n    }\r\n    this._streaming = Boolean(options['stream']);\r\n\r\n    var input_stream = new Stream(bytes);\r\n\r\n    var code_points = [];\r\n\r\n    /** @type {?(number|!Array.<number>)} */\r\n    var result;\r\n\r\n    while (!input_stream.endOfStream()) {\r\n      result = this._decoder.handler(input_stream, input_stream.read());\r\n      if (result === finished)\r\n        break;\r\n      if (result === null)\r\n        continue;\r\n      if (Array.isArray(result))\r\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\r\n      else\r\n        code_points.push(result);\r\n    }\r\n    if (!this._streaming) {\r\n      do {\r\n        result = this._decoder.handler(input_stream, input_stream.read());\r\n        if (result === finished)\r\n          break;\r\n        if (result === null)\r\n          continue;\r\n        if (Array.isArray(result))\r\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\r\n        else\r\n          code_points.push(result);\r\n      } while (!input_stream.endOfStream());\r\n      this._decoder = null;\r\n    }\r\n\r\n    if (code_points.length) {\r\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\r\n      // ignore BOM flag and BOM seen flag are unset, run these\r\n      // subsubsteps:\r\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\r\n          !this._ignoreBOM && !this._BOMseen) {\r\n        // If token is U+FEFF, set BOM seen flag.\r\n        if (code_points[0] === 0xFEFF) {\r\n          this._BOMseen = true;\r\n          code_points.shift();\r\n        } else {\r\n          // Otherwise, if token is not end-of-stream, set BOM seen\r\n          // flag and append token to output.\r\n          this._BOMseen = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return codePointsToString(code_points);\r\n  }\r\n};\r\n\r\n// 7.2 Interface TextEncoder\r\n\r\n/**\r\n * @constructor\r\n * @param {string=} encoding The label of the encoding;\r\n *     defaults to 'utf-8'.\r\n * @param {Object=} options\r\n */\r\nfunction TextEncoder(encoding, options) {\r\n  if (!(this instanceof TextEncoder))\r\n    return new TextEncoder(encoding, options);\r\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\r\n  if (encoding !== DEFAULT_ENCODING) {\r\n    throw new Error('Encoding not supported. Only utf-8 is supported');\r\n  }\r\n  options = ToDictionary(options);\r\n\r\n  /** @private @type {boolean} */\r\n  this._streaming = false;\r\n  /** @private @type {?Encoder} */\r\n  this._encoder = null;\r\n  /** @private @type {{fatal: boolean}} */\r\n  this._options = {fatal: Boolean(options['fatal'])};\r\n\r\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\r\n}\r\n\r\nTextEncoder.prototype = {\r\n  /**\r\n   * @param {string=} opt_string The string to encode.\r\n   * @param {Object=} options\r\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\r\n   */\r\n  encode: function encode(opt_string, options) {\r\n    opt_string = opt_string ? String(opt_string) : '';\r\n    options = ToDictionary(options);\r\n\r\n    // NOTE: This option is nonstandard. None of the encodings\r\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\r\n    // so streaming is not necessary.\r\n    if (!this._streaming)\r\n      this._encoder = new UTF8Encoder(this._options);\r\n    this._streaming = Boolean(options['stream']);\r\n\r\n    var bytes = [];\r\n    var input_stream = new Stream(stringToCodePoints(opt_string));\r\n    /** @type {?(number|!Array.<number>)} */\r\n    var result;\r\n    while (!input_stream.endOfStream()) {\r\n      result = this._encoder.handler(input_stream, input_stream.read());\r\n      if (result === finished)\r\n        break;\r\n      if (Array.isArray(result))\r\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\r\n      else\r\n        bytes.push(result);\r\n    }\r\n    if (!this._streaming) {\r\n      while (true) {\r\n        result = this._encoder.handler(input_stream, input_stream.read());\r\n        if (result === finished)\r\n          break;\r\n        if (Array.isArray(result))\r\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\r\n        else\r\n          bytes.push(result);\r\n      }\r\n      this._encoder = null;\r\n    }\r\n    return new Uint8Array(bytes);\r\n  }\r\n};\r\n\r\n//\r\n// 8. The encoding\r\n//\r\n\r\n// 8.1 utf-8\r\n\r\n/**\r\n * @constructor\r\n * @implements {Decoder}\r\n * @param {{fatal: boolean}} options\r\n */\r\nfunction UTF8Decoder(options) {\r\n  var fatal = options.fatal;\r\n\r\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\r\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\r\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\r\n  // (initially 0xBF).\r\n  var /** @type {number} */ utf8_code_point = 0,\r\n      /** @type {number} */ utf8_bytes_seen = 0,\r\n      /** @type {number} */ utf8_bytes_needed = 0,\r\n      /** @type {number} */ utf8_lower_boundary = 0x80,\r\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\r\n\r\n  /**\r\n   * @param {Stream} stream The stream of bytes being decoded.\r\n   * @param {number} bite The next byte read from the stream.\r\n   * @return {?(number|!Array.<number>)} The next code point(s)\r\n   *     decoded, or null if not enough data exists in the input\r\n   *     stream to decode a complete code point.\r\n   */\r\n  this.handler = function(stream, bite) {\r\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\r\n    // set utf-8 bytes needed to 0 and return error.\r\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\r\n      utf8_bytes_needed = 0;\r\n      return decoderError(fatal);\r\n    }\r\n\r\n    // 2. If byte is end-of-stream, return finished.\r\n    if (bite === end_of_stream)\r\n      return finished;\r\n\r\n    // 3. If utf-8 bytes needed is 0, based on byte:\r\n    if (utf8_bytes_needed === 0) {\r\n\r\n      // 0x00 to 0x7F\r\n      if (inRange(bite, 0x00, 0x7F)) {\r\n        // Return a code point whose value is byte.\r\n        return bite;\r\n      }\r\n\r\n      // 0xC2 to 0xDF\r\n      if (inRange(bite, 0xC2, 0xDF)) {\r\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\r\n        // − 0xC0.\r\n        utf8_bytes_needed = 1;\r\n        utf8_code_point = bite - 0xC0;\r\n      }\r\n\r\n      // 0xE0 to 0xEF\r\n      else if (inRange(bite, 0xE0, 0xEF)) {\r\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\r\n        if (bite === 0xE0)\r\n          utf8_lower_boundary = 0xA0;\r\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\r\n        if (bite === 0xED)\r\n          utf8_upper_boundary = 0x9F;\r\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\r\n        // byte − 0xE0.\r\n        utf8_bytes_needed = 2;\r\n        utf8_code_point = bite - 0xE0;\r\n      }\r\n\r\n      // 0xF0 to 0xF4\r\n      else if (inRange(bite, 0xF0, 0xF4)) {\r\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\r\n        if (bite === 0xF0)\r\n          utf8_lower_boundary = 0x90;\r\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\r\n        if (bite === 0xF4)\r\n          utf8_upper_boundary = 0x8F;\r\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\r\n        // byte − 0xF0.\r\n        utf8_bytes_needed = 3;\r\n        utf8_code_point = bite - 0xF0;\r\n      }\r\n\r\n      // Otherwise\r\n      else {\r\n        // Return error.\r\n        return decoderError(fatal);\r\n      }\r\n\r\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\r\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\r\n      // return continue.\r\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\r\n      return null;\r\n    }\r\n\r\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\r\n    // upper boundary, run these substeps:\r\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\r\n\r\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\r\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\r\n      // utf-8 upper boundary to 0xBF.\r\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\r\n      utf8_lower_boundary = 0x80;\r\n      utf8_upper_boundary = 0xBF;\r\n\r\n      // 2. Prepend byte to stream.\r\n      stream.prepend(bite);\r\n\r\n      // 3. Return error.\r\n      return decoderError(fatal);\r\n    }\r\n\r\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\r\n    // to 0xBF.\r\n    utf8_lower_boundary = 0x80;\r\n    utf8_upper_boundary = 0xBF;\r\n\r\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\r\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\r\n    // needed − utf-8 bytes seen)).\r\n    utf8_bytes_seen += 1;\r\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\r\n\r\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\r\n    // continue.\r\n    if (utf8_bytes_seen !== utf8_bytes_needed)\r\n      return null;\r\n\r\n    // 8. Let code point be utf-8 code point.\r\n    var code_point = utf8_code_point;\r\n\r\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\r\n    // seen to 0.\r\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\r\n\r\n    // 10. Return a code point whose value is code point.\r\n    return code_point;\r\n  };\r\n}\r\n\r\n/**\r\n * @constructor\r\n * @implements {Encoder}\r\n * @param {{fatal: boolean}} options\r\n */\r\nfunction UTF8Encoder(options) {\r\n  var fatal = options.fatal;\r\n  /**\r\n   * @param {Stream} stream Input stream.\r\n   * @param {number} code_point Next code point read from the stream.\r\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\r\n   */\r\n  this.handler = function(stream, code_point) {\r\n    // 1. If code point is end-of-stream, return finished.\r\n    if (code_point === end_of_stream)\r\n      return finished;\r\n\r\n    // 2. If code point is in the range U+0000 to U+007F, return a\r\n    // byte whose value is code point.\r\n    if (inRange(code_point, 0x0000, 0x007f))\r\n      return code_point;\r\n\r\n    // 3. Set count and offset based on the range code point is in:\r\n    var count, offset;\r\n    // U+0080 to U+07FF:    1 and 0xC0\r\n    if (inRange(code_point, 0x0080, 0x07FF)) {\r\n      count = 1;\r\n      offset = 0xC0;\r\n    }\r\n    // U+0800 to U+FFFF:    2 and 0xE0\r\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\r\n      count = 2;\r\n      offset = 0xE0;\r\n    }\r\n    // U+10000 to U+10FFFF: 3 and 0xF0\r\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\r\n      count = 3;\r\n      offset = 0xF0;\r\n    }\r\n\r\n    // 4.Let bytes be a byte sequence whose first byte is (code\r\n    // point >> (6 × count)) + offset.\r\n    var bytes = [(code_point >> (6 * count)) + offset];\r\n\r\n    // 5. Run these substeps while count is greater than 0:\r\n    while (count > 0) {\r\n\r\n      // 1. Set temp to code point >> (6 × (count − 1)).\r\n      var temp = code_point >> (6 * (count - 1));\r\n\r\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\r\n      bytes.push(0x80 | (temp & 0x3F));\r\n\r\n      // 3. Decrease count by one.\r\n      count -= 1;\r\n    }\r\n\r\n    // 6. Return bytes bytes, in order.\r\n    return bytes;\r\n  };\r\n}\r\n\r\nexports.TextEncoder = TextEncoder;\r\nexports.TextDecoder = TextDecoder;\r\n","/**\r\n * closure-compiler-friendly tslib\r\n * copied from node_modules/tslib/tslib.js\r\n * update as needed\r\n */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n\r\nvar __assign = Object.assign || function (t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n};\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n};\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n};\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n};\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n};\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n};\r\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Message_ from '../format/Message_generated';\nvar Message = Message_.org.apache.arrow.flatbuf.Message;\nvar MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nvar RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nexport var PADDING = 4;\nexport function readMessages(bb) {\n    var message, length;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(bb.position() < bb.capacity() &&\n                    (length = bb.readInt32(bb.position())) > 0)) return [3 /*break*/, 2];\n                bb.setPosition(bb.position() + PADDING);\n                message = Message.getRootAsMessage(bb);\n                bb.setPosition(bb.position() + length);\n                return [4 /*yield*/, message];\n            case 1:\n                _a.sent();\n                return [3 /*break*/, 0];\n            case 2: return [2 /*return*/];\n        }\n    });\n}\nexport function readMessageBatches(bb) {\n    var bytes, _a, _b, message, type, id, data, header, e_1_1, e_1, _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                bytes = bb.bytes();\n                _d.label = 1;\n            case 1:\n                _d.trys.push([1, 6, 7, 8]);\n                _a = __values(readMessages(bb)), _b = _a.next();\n                _d.label = 2;\n            case 2:\n                if (!!_b.done) return [3 /*break*/, 5];\n                message = _b.value;\n                type = message.headerType();\n                id = void 0, data = void 0;\n                if (type === MessageHeader.RecordBatch) {\n                    data = message.header(new RecordBatch());\n                }\n                else if (type === MessageHeader.DictionaryBatch) {\n                    header = message.header(new DictionaryBatch());\n                    id = header.id().toFloat64().toString();\n                    data = header.data();\n                }\n                else {\n                    return [3 /*break*/, 4];\n                }\n                return [4 /*yield*/, { id: id, data: data, bytes: bytes, offset: bytes.byteOffset + bb.position() }];\n            case 3:\n                _d.sent();\n                // position the buffer after the body to read the next message\n                bb.setPosition(bb.position() + message.bodyLength().low);\n                _d.label = 4;\n            case 4:\n                _b = _a.next();\n                return [3 /*break*/, 2];\n            case 5: return [3 /*break*/, 8];\n            case 6:\n                e_1_1 = _d.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 8];\n            case 7:\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n                return [7 /*endfinally*/];\n            case 8: return [2 /*return*/];\n        }\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUUsS0FBSyxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBQTs7Z0JBQWxGLFNBQWtGLENBQUM7Z0JBQ25GLDhEQUE4RDtnQkFDOUQsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBRWhFIiwiZmlsZSI6InJlYWRlci9tZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuLy8gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4vLyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbi8vXHJcbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbi8vXHJcbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuLy8gdW5kZXIgdGhlIExpY2Vuc2UuXHJcblxyXG5pbXBvcnQgeyBmbGF0YnVmZmVycyB9IGZyb20gJ2ZsYXRidWZmZXJzJztcclxuaW1wb3J0ICogYXMgTWVzc2FnZV8gZnJvbSAnLi4vZm9ybWF0L01lc3NhZ2VfZ2VuZXJhdGVkJztcclxuaW1wb3J0IEJ5dGVCdWZmZXIgPSBmbGF0YnVmZmVycy5CeXRlQnVmZmVyO1xyXG5pbXBvcnQgTWVzc2FnZSA9IE1lc3NhZ2VfLm9yZy5hcGFjaGUuYXJyb3cuZmxhdGJ1Zi5NZXNzYWdlO1xyXG5pbXBvcnQgTWVzc2FnZUhlYWRlciA9IE1lc3NhZ2VfLm9yZy5hcGFjaGUuYXJyb3cuZmxhdGJ1Zi5NZXNzYWdlSGVhZGVyO1xyXG5pbXBvcnQgUmVjb3JkQmF0Y2ggPSBNZXNzYWdlXy5vcmcuYXBhY2hlLmFycm93LmZsYXRidWYuUmVjb3JkQmF0Y2g7XHJcbmltcG9ydCBEaWN0aW9uYXJ5QmF0Y2ggPSBNZXNzYWdlXy5vcmcuYXBhY2hlLmFycm93LmZsYXRidWYuRGljdGlvbmFyeUJhdGNoO1xyXG5cclxuZXhwb3J0IGNvbnN0IFBBRERJTkcgPSA0O1xyXG5leHBvcnQgdHlwZSBNZXNzYWdlQmF0Y2ggPSB7XHJcbiAgICBpZD86IHN0cmluZztcclxuICAgIG9mZnNldDogbnVtYmVyO1xyXG4gICAgYnl0ZXM6IFVpbnQ4QXJyYXk7XHJcbiAgICBkYXRhOiBSZWNvcmRCYXRjaDtcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiogcmVhZE1lc3NhZ2VzKGJiOiBCeXRlQnVmZmVyKSB7XHJcbiAgICBsZXQgbWVzc2FnZSwgbGVuZ3RoO1xyXG4gICAgd2hpbGUgKGJiLnBvc2l0aW9uKCkgPCBiYi5jYXBhY2l0eSgpICYmXHJcbiAgICAgICAgICAobGVuZ3RoID0gYmIucmVhZEludDMyKGJiLnBvc2l0aW9uKCkpKSA+IDApIHtcclxuICAgICAgICBiYi5zZXRQb3NpdGlvbihiYi5wb3NpdGlvbigpICsgUEFERElORyk7XHJcbiAgICAgICAgbWVzc2FnZSA9IE1lc3NhZ2UuZ2V0Um9vdEFzTWVzc2FnZShiYik7XHJcbiAgICAgICAgYmIuc2V0UG9zaXRpb24oYmIucG9zaXRpb24oKSArIGxlbmd0aCk7XHJcbiAgICAgICAgeWllbGQgbWVzc2FnZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uKiByZWFkTWVzc2FnZUJhdGNoZXMoYmI6IEJ5dGVCdWZmZXIpIHtcclxuICAgIGxldCBieXRlcyA9IGJiLmJ5dGVzKCk7XHJcbiAgICBmb3IgKGxldCBtZXNzYWdlIG9mIHJlYWRNZXNzYWdlcyhiYikpIHtcclxuICAgICAgICBsZXQgdHlwZSA9IG1lc3NhZ2UuaGVhZGVyVHlwZSgpO1xyXG4gICAgICAgIGxldCBpZDogc3RyaW5nLCBkYXRhOiBSZWNvcmRCYXRjaDtcclxuICAgICAgICBpZiAodHlwZSA9PT0gTWVzc2FnZUhlYWRlci5SZWNvcmRCYXRjaCkge1xyXG4gICAgICAgICAgICBkYXRhID0gbWVzc2FnZS5oZWFkZXIobmV3IFJlY29yZEJhdGNoKCkpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gTWVzc2FnZUhlYWRlci5EaWN0aW9uYXJ5QmF0Y2gpIHtcclxuICAgICAgICAgICAgbGV0IGhlYWRlciA9IG1lc3NhZ2UuaGVhZGVyKG5ldyBEaWN0aW9uYXJ5QmF0Y2goKSk7XHJcbiAgICAgICAgICAgIGlkID0gaGVhZGVyLmlkKCkudG9GbG9hdDY0KCkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgZGF0YSA9IGhlYWRlci5kYXRhKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHlpZWxkIDxNZXNzYWdlQmF0Y2g+IHsgaWQsIGRhdGEsIGJ5dGVzLCBvZmZzZXQ6IGJ5dGVzLmJ5dGVPZmZzZXQgKyBiYi5wb3NpdGlvbigpIH07XHJcbiAgICAgICAgLy8gcG9zaXRpb24gdGhlIGJ1ZmZlciBhZnRlciB0aGUgYm9keSB0byByZWFkIHRoZSBuZXh0IG1lc3NhZ2VcclxuICAgICAgICBiYi5zZXRQb3NpdGlvbihiYi5wb3NpdGlvbigpICsgbWVzc2FnZS5ib2R5TGVuZ3RoKCkubG93KTtcclxuICAgIH1cclxufVxyXG4iXX0=\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as File_ from '../format/File_generated';\nimport * as Schema_ from '../format/Schema_generated';\nimport * as Message_ from '../format/Message_generated';\nimport { PADDING, readMessageBatches } from './message';\nvar Footer = File_.org.apache.arrow.flatbuf.Footer;\nexport var Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nexport var RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar MAGIC_STR = 'ARROW1';\nvar MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (var i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\nexport function _checkMagic(buffer, index) {\n    if (index === void 0) { index = 0; }\n    for (var i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\nvar magicLength = MAGIC.length;\nvar magicAndPadding = magicLength + PADDING;\nvar magicX2AndPadding = magicLength * 2 + PADDING;\nexport function readFile() {\n    var bbs = [];\n    for (_i = 0; _i < arguments.length; _i++) {\n        bbs[_i] = arguments[_i];\n    }\n    var _i, bbs_1, bbs_1_1, bb, fileLength, footerLength, footerOffset, footer, schema, i, n, block, _a, _b, batch, e_1_1, i, n, block, _c, _d, batch, e_2_1, e_3_1, e_3, _e, e_1, _f, e_2, _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _h.trys.push([0, 23, 24, 25]);\n                bbs_1 = __values(bbs), bbs_1_1 = bbs_1.next();\n                _h.label = 1;\n            case 1:\n                if (!!bbs_1_1.done) return [3 /*break*/, 22];\n                bb = bbs_1_1.value;\n                fileLength = bb.capacity();\n                footerLength = void 0, footerOffset = void 0;\n                if ((fileLength < magicX2AndPadding /*                     Arrow buffer too small */) ||\n                    (!_checkMagic(bb.bytes(), 0) /*                        Missing magic start    */) ||\n                    (!_checkMagic(bb.bytes(), fileLength - magicLength) /* Missing magic end      */) ||\n                    ((footerLength = bb.readInt32(footerOffset = fileLength - magicAndPadding)) < 1 &&\n                        (footerLength + magicX2AndPadding > fileLength))) {\n                    throw new Error('Invalid file');\n                }\n                bb.setPosition(footerOffset - footerLength);\n                footer = Footer.getRootAsFooter(bb), schema = footer.schema();\n                i = -1, n = footer.dictionariesLength();\n                _h.label = 2;\n            case 2:\n                if (!(++i < n)) return [3 /*break*/, 11];\n                block = footer.dictionaries(i);\n                bb.setPosition(block.offset().low);\n                _h.label = 3;\n            case 3:\n                _h.trys.push([3, 8, 9, 10]);\n                _a = __values(readMessageBatches(bb)), _b = _a.next();\n                _h.label = 4;\n            case 4:\n                if (!!_b.done) return [3 /*break*/, 7];\n                batch = _b.value;\n                return [4 /*yield*/, { schema: schema, batch: batch }];\n            case 5:\n                _h.sent();\n                return [3 /*break*/, 7];\n            case 6:\n                _b = _a.next();\n                return [3 /*break*/, 4];\n            case 7: return [3 /*break*/, 10];\n            case 8:\n                e_1_1 = _h.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 10];\n            case 9:\n                try {\n                    if (_b && !_b.done && (_f = _a.return)) _f.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n                return [7 /*endfinally*/];\n            case 10: return [3 /*break*/, 2];\n            case 11:\n                i = -1, n = footer.recordBatchesLength();\n                _h.label = 12;\n            case 12:\n                if (!(++i < n)) return [3 /*break*/, 21];\n                block = footer.recordBatches(i);\n                bb.setPosition(block.offset().low);\n                _h.label = 13;\n            case 13:\n                _h.trys.push([13, 18, 19, 20]);\n                _c = __values(readMessageBatches(bb)), _d = _c.next();\n                _h.label = 14;\n            case 14:\n                if (!!_d.done) return [3 /*break*/, 17];\n                batch = _d.value;\n                return [4 /*yield*/, { schema: schema, batch: batch }];\n            case 15:\n                _h.sent();\n                return [3 /*break*/, 17];\n            case 16:\n                _d = _c.next();\n                return [3 /*break*/, 14];\n            case 17: return [3 /*break*/, 20];\n            case 18:\n                e_2_1 = _h.sent();\n                e_2 = { error: e_2_1 };\n                return [3 /*break*/, 20];\n            case 19:\n                try {\n                    if (_d && !_d.done && (_g = _c.return)) _g.call(_c);\n                }\n                finally { if (e_2) throw e_2.error; }\n                return [7 /*endfinally*/];\n            case 20: return [3 /*break*/, 12];\n            case 21:\n                bbs_1_1 = bbs_1.next();\n                return [3 /*break*/, 1];\n            case 22: return [3 /*break*/, 25];\n            case 23:\n                e_3_1 = _h.sent();\n                e_3 = { error: e_3_1 };\n                return [3 /*break*/, 25];\n            case 24:\n                try {\n                    if (bbs_1_1 && !bbs_1_1.done && (_e = bbs_1.return)) _e.call(bbs_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n                return [7 /*endfinally*/];\n            case 25: return [2 /*return*/];\n        }\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { _checkMagic } from './file';\nimport * as Schema_ from '../format/Schema_generated';\nimport * as Message_ from '../format/Message_generated';\nimport { readMessages, readMessageBatches } from './message';\nvar Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport function readStream() {\n    var bbs = [];\n    for (_i = 0; _i < arguments.length; _i++) {\n        bbs[_i] = arguments[_i];\n    }\n    var _i, _a, _b, message, schema, bbs_1, bbs_1_1, bb, _c, _d, batch, e_1_1, e_2_1, e_3_1, e_3, _e, e_2, _f, e_1, _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                if (!bbs.length || _checkMagic(bbs[0].bytes(), 0)) {\n                    throw new Error('Invalid Arrow Stream');\n                }\n                _h.label = 1;\n            case 1:\n                _h.trys.push([1, 19, 20, 21]);\n                _a = __values(readMessages(bbs[0])), _b = _a.next();\n                _h.label = 2;\n            case 2:\n                if (!!_b.done) return [3 /*break*/, 18];\n                message = _b.value;\n                if (!(message.headerType() === MessageHeader.Schema)) return [3 /*break*/, 17];\n                schema = message.header(new Schema());\n                _h.label = 3;\n            case 3:\n                _h.trys.push([3, 14, 15, 16]);\n                bbs_1 = __values(bbs), bbs_1_1 = bbs_1.next();\n                _h.label = 4;\n            case 4:\n                if (!!bbs_1_1.done) return [3 /*break*/, 13];\n                bb = bbs_1_1.value;\n                _h.label = 5;\n            case 5:\n                _h.trys.push([5, 10, 11, 12]);\n                _c = __values(readMessageBatches(bb)), _d = _c.next();\n                _h.label = 6;\n            case 6:\n                if (!!_d.done) return [3 /*break*/, 9];\n                batch = _d.value;\n                return [4 /*yield*/, { schema: schema, batch: batch }];\n            case 7:\n                _h.sent();\n                _h.label = 8;\n            case 8:\n                _d = _c.next();\n                return [3 /*break*/, 6];\n            case 9: return [3 /*break*/, 12];\n            case 10:\n                e_1_1 = _h.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 12];\n            case 11:\n                try {\n                    if (_d && !_d.done && (_g = _c.return)) _g.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n                return [7 /*endfinally*/];\n            case 12:\n                bbs_1_1 = bbs_1.next();\n                return [3 /*break*/, 4];\n            case 13: return [3 /*break*/, 16];\n            case 14:\n                e_2_1 = _h.sent();\n                e_2 = { error: e_2_1 };\n                return [3 /*break*/, 16];\n            case 15:\n                try {\n                    if (bbs_1_1 && !bbs_1_1.done && (_f = bbs_1.return)) _f.call(bbs_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n                return [7 /*endfinally*/];\n            case 16: return [3 /*break*/, 18];\n            case 17:\n                _b = _a.next();\n                return [3 /*break*/, 2];\n            case 18: return [3 /*break*/, 21];\n            case 19:\n                e_3_1 = _h.sent();\n                e_3 = { error: e_3_1 };\n                return [3 /*break*/, 21];\n            case 20:\n                try {\n                    if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                }\n                finally { if (e_3) throw e_3.error; }\n                return [7 /*endfinally*/];\n            case 21: return [2 /*return*/];\n        }\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRlci9zdHJlYW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELCtEQUErRDtBQUMvRCx3REFBd0Q7QUFDeEQsNkRBQTZEO0FBQzdELG9EQUFvRDtBQUNwRCw2REFBNkQ7QUFDN0QsNkRBQTZEO0FBQzdELEVBQUU7QUFDRiwrQ0FBK0M7QUFDL0MsRUFBRTtBQUNGLDZEQUE2RDtBQUM3RCw4REFBOEQ7QUFDOUQseURBQXlEO0FBQ3pELDREQUE0RDtBQUM1RCwwREFBMEQ7QUFDMUQscUJBQXFCO0FBRXJCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFckMsT0FBTyxLQUFLLE9BQU8sTUFBTSw0QkFBNEIsQ0FBQztBQUN0RCxPQUFPLEtBQUssUUFBUSxNQUFNLDZCQUE2QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHN0QsSUFBTyxNQUFNLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDeEQsSUFBTyxhQUFhLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFFdkUsTUFBTTtJQUFzQixhQUFvQjtpQkFBcEIscUJBQW9CLEVBQXBCLElBQW9CO1FBQXBCLHdCQUFvQjs7Ozs7O2dCQUM1QyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLElBQUksV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2hELE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFDNUMsQ0FBQzs7OztnQkFDcUIsS0FBQSxTQUFBLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTs7OztnQkFBL0IsT0FBTztxQkFDVixDQUFBLE9BQU8sQ0FBQyxVQUFVLEVBQUUsS0FBSyxhQUFhLENBQUMsTUFBTSxDQUFBLEVBQTdDLHlCQUE2QztnQkFDdkMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLEVBQUUsQ0FBQyxDQUFDOzs7O2dCQUMzQixRQUFBLFNBQUEsR0FBRyxDQUFBOzs7O2dCQUFULEVBQUU7Ozs7Z0JBQ1csS0FBQSxTQUFBLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxDQUFBOzs7O2dCQUEvQixLQUFLO2dCQUNaLHFCQUFNLEVBQUUsTUFBTSxRQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsRUFBQTs7Z0JBQXZCLFNBQXVCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxQkFHaEMseUJBQU07Ozs7Ozs7Ozs7Ozs7Ozs7OztDQUdqQiIsImZpbGUiOiJyZWFkZXIvc3RyZWFtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuLy8gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4vLyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbi8vXHJcbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbi8vXHJcbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuLy8gdW5kZXIgdGhlIExpY2Vuc2UuXHJcblxyXG5pbXBvcnQgeyBfY2hlY2tNYWdpYyB9IGZyb20gJy4vZmlsZSc7XHJcbmltcG9ydCB7IGZsYXRidWZmZXJzIH0gZnJvbSAnZmxhdGJ1ZmZlcnMnO1xyXG5pbXBvcnQgKiBhcyBTY2hlbWFfIGZyb20gJy4uL2Zvcm1hdC9TY2hlbWFfZ2VuZXJhdGVkJztcclxuaW1wb3J0ICogYXMgTWVzc2FnZV8gZnJvbSAnLi4vZm9ybWF0L01lc3NhZ2VfZ2VuZXJhdGVkJztcclxuaW1wb3J0IHsgcmVhZE1lc3NhZ2VzLCByZWFkTWVzc2FnZUJhdGNoZXMgfSBmcm9tICcuL21lc3NhZ2UnO1xyXG5cclxuaW1wb3J0IEJ5dGVCdWZmZXIgPSBmbGF0YnVmZmVycy5CeXRlQnVmZmVyO1xyXG5pbXBvcnQgU2NoZW1hID0gU2NoZW1hXy5vcmcuYXBhY2hlLmFycm93LmZsYXRidWYuU2NoZW1hO1xyXG5pbXBvcnQgTWVzc2FnZUhlYWRlciA9IE1lc3NhZ2VfLm9yZy5hcGFjaGUuYXJyb3cuZmxhdGJ1Zi5NZXNzYWdlSGVhZGVyO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uKiByZWFkU3RyZWFtKC4uLmJiczogQnl0ZUJ1ZmZlcltdKSB7XHJcbiAgICBpZiAoIWJicy5sZW5ndGggfHwgX2NoZWNrTWFnaWMoYmJzWzBdLmJ5dGVzKCksIDApKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEFycm93IFN0cmVhbScpO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIHJlYWRNZXNzYWdlcyhiYnNbMF0pKSB7XHJcbiAgICAgICAgaWYgKG1lc3NhZ2UuaGVhZGVyVHlwZSgpID09PSBNZXNzYWdlSGVhZGVyLlNjaGVtYSkge1xyXG4gICAgICAgICAgICBjb25zdCBzY2hlbWEgPSBtZXNzYWdlLmhlYWRlcihuZXcgU2NoZW1hKCkpO1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGJiIG9mIGJicykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBiYXRjaCBvZiByZWFkTWVzc2FnZUJhdGNoZXMoYmIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgeyBzY2hlbWEsIGJhdGNoIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Schema_ from '../format/Schema_generated';\nexport var Type = Schema_.org.apache.arrow.flatbuf.Type;\nexport var Field = Schema_.org.apache.arrow.flatbuf.Field;\nexport function sliceToRangeArgs(length, start, end) {\n    var total = length, from = start || 0;\n    var to = end === end && typeof end == 'number' ? end : total;\n    if (to < 0) {\n        to = total + to;\n    }\n    if (from < 0) {\n        from = total - (from * -1) % total;\n    }\n    if (to < from) {\n        from = to;\n        to = start;\n    }\n    total = !isFinite(total = (to - from)) || total < 0 ? 0 : total;\n    return [from, total];\n}\nvar Vector = /** @class */ (function () {\n    function Vector() {\n    }\n    Vector.create = function (field, length) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var vector = new (this.bind.apply(this, __spread([void 0], args)))(), m;\n        vector.length = length;\n        vector.name = field.name();\n        vector.type = Type[field.typeType()];\n        if ((m = field.customMetadataLength()) > 0) {\n            var entry = void 0, i = 0, data = vector.props = new Map();\n            do {\n                entry = field.customMetadata(i);\n                data[entry.key()] = entry.value();\n            } while (++i < m);\n        }\n        return vector;\n    };\n    Vector.from = function (source, length) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var vector = new (this.bind.apply(this, __spread([void 0], args)))();\n        vector.length = length;\n        source.name !== Vector.defaultName && (vector.name = source.name);\n        source.type !== Vector.defaultType && (vector.type = source.type);\n        source.props !== Vector.defaultProps && (vector.props = source.props);\n        return vector;\n    };\n    Vector.prototype.get = function (index) { return null; };\n    Vector.prototype.concat = function (vector) { return vector; };\n    Vector.prototype.slice = function (start, end, batch) {\n        var stride = this.stride;\n        var _a = __read(sliceToRangeArgs(stride * this.length, stride * (start || 0), stride * end), 2), offset = _a[0], length = _a[1];\n        return this.range(offset, length, batch);\n    };\n    Vector.prototype.range = function (index, length, batch) {\n        var result = new Array(length);\n        for (var i = -1, n = this.length; ++i < length;) {\n            result[i] = this.get((i + index) % n);\n        }\n        return result;\n    };\n    Vector.prototype[Symbol.iterator] = function () {\n        var i, n;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    i = -1, n = this.length;\n                    _a.label = 1;\n                case 1:\n                    if (!(++i < n)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, this.get(i)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    };\n    Vector.defaultName = '';\n    Vector.defaultProps = new Map();\n    Vector.defaultType = Type[Type.NONE];\n    return Vector;\n}());\nexport { Vector };\nVector.prototype.length = 0;\nVector.prototype.stride = 1;\nVector.prototype.name = Vector.defaultName;\nVector.prototype.type = Vector.defaultType;\nVector.prototype.props = Vector.defaultProps;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar VirtualVector = /** @class */ (function (_super) {\n    __extends(VirtualVector, _super);\n    function VirtualVector() {\n        var lists = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            lists[_i] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.lists = lists.filter(Boolean);\n        return _this;\n    }\n    Object.defineProperty(VirtualVector.prototype, \"arrayType\", {\n        get: function () { return this._arrayType; },\n        enumerable: true,\n        configurable: true\n    });\n    VirtualVector.prototype.get = function (index) {\n        /* inlined `findVirtual` impl */\n        var rows, length, lists = this.lists;\n        for (var batch = -1; (rows = lists[++batch]) &&\n            (length = rows.length) <= index &&\n            0 <= (index -= length);) { }\n        return rows && -1 < index ? rows[index] : null;\n    };\n    VirtualVector.prototype.range = function (from, total, batch) {\n        /* inlined `findVirtual` impl */\n        var rows, local = from, length;\n        var _a = this, lists = _a.lists, _arrayType = _a._arrayType;\n        for (batch = (batch || 0) - 1; (rows = lists[++batch]) &&\n            (length = rows.length) <= local &&\n            0 <= (local -= length);) { }\n        if (rows && local > -1) {\n            var index = 0, listsLength = lists.length;\n            var set = Array.isArray(rows) ? arraySet : typedArraySet;\n            var slice = _arrayType['prototype']['subarray'] || _arrayType['prototype']['slice'];\n            var source = slice.call(rows, local, local + total), target = source;\n            // Perf optimization: if the first slice contains all the values we're looking for,\n            // we don't have to copy values to a target Array. If we're slicing a TypedArray,\n            // this is a significant improvement as we avoid the memcpy 🎉\n            if (source.length < total) {\n                target = new _arrayType(total);\n                while ((index = set(source, target, index)) < total) {\n                    rows = lists[batch = ((batch + 1) % listsLength)];\n                    source = slice.call(rows, 0, Math.min(rows.length, total - index));\n                }\n            }\n            return target;\n        }\n        return new _arrayType(0);\n    };\n    VirtualVector.prototype[Symbol.iterator] = function () {\n        var index, _a, lists, length, outer, n, list, inner, k;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    index = -1, _a = this, lists = _a.lists, length = _a.length;\n                    outer = -1, n = lists.length;\n                    _b.label = 1;\n                case 1:\n                    if (!(++outer < n)) return [3 /*break*/, 6];\n                    list = lists[outer];\n                    inner = -1, k = list.length;\n                    _b.label = 2;\n                case 2:\n                    if (!(++index < length && ++inner < k)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, list[inner]];\n                case 3:\n                    _b.sent();\n                    _b.label = 4;\n                case 4: return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 1];\n                case 6: return [2 /*return*/];\n            }\n        });\n    };\n    return VirtualVector;\n}(Vector));\nexport { VirtualVector };\nvar BitVector = /** @class */ (function (_super) {\n    __extends(BitVector, _super);\n    function BitVector() {\n        var lists = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            lists[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, __spread(lists)) || this;\n        _this.length = _this.lists.reduce(function (l, xs) { return l + xs['length']; }, 0);\n        return _this;\n    }\n    BitVector.from = function (src) {\n        return src instanceof BitVector ? src\n            : src === BitVector.constant ? src\n                : src instanceof Uint8Array ? new BitVector(src)\n                    : src instanceof Array ? new BitVector(BitVector.pack(src))\n                        : src instanceof Vector ? new BitVector(BitVector.pack(src))\n                            : BitVector.constant;\n    };\n    BitVector.pack = function (values) {\n        var xs = [], n, i = 0;\n        var bit = 0, byte = 0;\n        try {\n            for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n                var value = values_1_1.value;\n                value && (byte |= 1 << bit);\n                if (++bit === 8) {\n                    xs[i++] = byte;\n                    byte = bit = 0;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (i === 0 || bit > 0) {\n            xs[i++] = byte;\n        }\n        if (i % 8 && (n = n = i + 8 - i % 8)) {\n            do {\n                xs[i] = 0;\n            } while (++i < n);\n        }\n        return new Uint8Array(xs);\n        var e_1, _a;\n    };\n    BitVector.prototype.get = function (index) {\n        /* inlined `findVirtual` impl */\n        var rows, length, lists = this.lists;\n        for (var batch = -1; (rows = lists[++batch]) &&\n            (length = rows.length) <= index &&\n            0 <= (index -= length);) { }\n        return !(!rows || index < 0 || (rows[index >> 3 | 0] & 1 << index % 8) === 0);\n    };\n    BitVector.prototype.set = function (index, value) {\n        /* inlined `findVirtual` impl */\n        var rows, length, lists = this.lists;\n        for (var batch = -1; (rows = lists[++batch]) &&\n            (length = rows.length) <= index &&\n            0 <= (index -= length);) { }\n        if (rows && index > -1) {\n            value\n                ? (rows[index >> 3 | 0] |= (1 << (index % 8)))\n                : (rows[index >> 3 | 0] &= ~(1 << (index % 8)));\n        }\n    };\n    BitVector.prototype.concat = function (vector) {\n        return new (BitVector.bind.apply(BitVector, __spread([void 0], this.lists, vector.lists)))();\n    };\n    BitVector.prototype[Symbol.iterator] = function () {\n        var _a, _b, byte, i, e_2_1, e_2, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 7, 8, 9]);\n                    _a = __values(_super.prototype[Symbol.iterator].call(this)), _b = _a.next();\n                    _d.label = 1;\n                case 1:\n                    if (!!_b.done) return [3 /*break*/, 6];\n                    byte = _b.value;\n                    i = -1;\n                    _d.label = 2;\n                case 2:\n                    if (!(++i < 8)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, (byte & 1 << i) !== 0];\n                case 3:\n                    _d.sent();\n                    _d.label = 4;\n                case 4: return [3 /*break*/, 2];\n                case 5:\n                    _b = _a.next();\n                    return [3 /*break*/, 1];\n                case 6: return [3 /*break*/, 9];\n                case 7:\n                    e_2_1 = _d.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3 /*break*/, 9];\n                case 8:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                    return [7 /*endfinally*/];\n                case 9: return [2 /*return*/];\n            }\n        });\n    };\n    BitVector.constant = new (/** @class */ (function (_super) {\n        __extends(ValidVector, _super);\n        function ValidVector() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ValidVector.prototype.get = function () { return true; };\n        ValidVector.prototype[Symbol.iterator] = function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, true];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (true) return [3 /*break*/, 0];\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        };\n        return ValidVector;\n    }(Vector)))();\n    return BitVector;\n}(VirtualVector));\nexport { BitVector };\nvar TypedVector = /** @class */ (function (_super) {\n    __extends(TypedVector, _super);\n    function TypedVector(validity) {\n        var lists = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            lists[_i - 1] = arguments[_i];\n        }\n        var _this = _super.apply(this, __spread(lists)) || this;\n        validity && (_this.validity = BitVector.from(validity));\n        return _this;\n    }\n    TypedVector.prototype.concat = function (vector) {\n        return (_a = this.constructor).from.apply(_a, __spread([this,\n            this.length + vector.length,\n            this.validity.concat(vector.validity)], this.lists, vector.lists));\n        var _a;\n    };\n    return TypedVector;\n}(VirtualVector));\nexport { TypedVector };\nvar DateVector = /** @class */ (function (_super) {\n    __extends(DateVector, _super);\n    function DateVector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateVector.prototype.get = function (index) {\n        return !this.validity.get(index) ? null : new Date(Math.pow(2, 32) *\n            _super.prototype.get.call(this, 2 * index + 1) +\n            _super.prototype.get.call(this, 2 * index));\n    };\n    DateVector.prototype[Symbol.iterator] = function () {\n        var v, low, high, it, iv;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    it = _super.prototype[Symbol.iterator].call(this);\n                    iv = this.validity[Symbol.iterator]();\n                    _a.label = 1;\n                case 1:\n                    if (!(!(v = iv.next()).done && !(low = it.next()).done && !(high = it.next()).done)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, !v.value ? null : new Date(Math.pow(2, 32) * high.value + low.value)];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    return DateVector;\n}(TypedVector));\nexport { DateVector };\nvar IndexVector = /** @class */ (function (_super) {\n    __extends(IndexVector, _super);\n    function IndexVector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IndexVector.prototype.get = function (index, returnWithBatchIndex) {\n        if (returnWithBatchIndex === void 0) { returnWithBatchIndex = false; }\n        /* inlined `findVirtual` impl */\n        var rows, length, batch = -1, lists = this.lists;\n        for (; (rows = lists[++batch]) &&\n            (length = rows.length) <= index &&\n            0 <= (index -= length);) { }\n        return !returnWithBatchIndex\n            ? (rows && -1 < index ? rows[index + batch] : null)\n            : (rows && -1 < index ? [rows[index + batch], batch] : [0, -1]);\n    };\n    IndexVector.prototype[Symbol.iterator] = function () {\n        var xs, lists, i, n, list, j, k;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    xs = new Int32Array(2), lists = this.lists;\n                    i = -1, n = lists.length;\n                    _a.label = 1;\n                case 1:\n                    if (!(++i < n)) return [3 /*break*/, 7];\n                    list = lists[i];\n                    j = -1, k = list.length - 1;\n                    _a.label = 2;\n                case 2:\n                    if (!(++j < k)) return [3 /*break*/, 6];\n                    xs[1] = i;\n                    xs[0] = list[j];\n                    return [4 /*yield*/, xs];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, list[j + 1]];\n                case 4:\n                    _a.sent();\n                    _a.label = 5;\n                case 5: return [3 /*break*/, 2];\n                case 6: return [3 /*break*/, 1];\n                case 7: return [2 /*return*/];\n            }\n        });\n    };\n    return IndexVector;\n}(TypedVector));\nexport { IndexVector };\nvar ByteVector = /** @class */ (function (_super) {\n    __extends(ByteVector, _super);\n    function ByteVector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ByteVector.prototype.get = function (index) {\n        return this.validity.get(index) ? _super.prototype.get.call(this, index) : null;\n    };\n    ByteVector.prototype[Symbol.iterator] = function () {\n        var v, r, validity, it, iv;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    validity = this.validity;\n                    it = _super.prototype[Symbol.iterator].call(this);\n                    if (!(validity === BitVector.constant)) return [3 /*break*/, 2];\n                    return [5 /*yield**/, __values(it)];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 5];\n                case 2:\n                    iv = validity[Symbol.iterator]();\n                    _a.label = 3;\n                case 3:\n                    if (!(!(v = iv.next()).done && !(r = it.next()).done)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, !v.value ? null : r.value];\n                case 4:\n                    _a.sent();\n                    return [3 /*break*/, 3];\n                case 5: return [2 /*return*/];\n            }\n        });\n    };\n    return ByteVector;\n}(TypedVector));\nexport { ByteVector };\nvar LongVector = /** @class */ (function (_super) {\n    __extends(LongVector, _super);\n    function LongVector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LongVector.prototype.get = function (index) {\n        return !this.validity.get(index) ? null : new Long(_super.prototype.get.call(this, index * 2), /* low */ _super.prototype.get.call(this, index * 2 + 1) /* high */);\n    };\n    LongVector.prototype[Symbol.iterator] = function () {\n        var v, low, high, it, iv;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    it = _super.prototype[Symbol.iterator].call(this);\n                    iv = this.validity[Symbol.iterator]();\n                    _a.label = 1;\n                case 1:\n                    if (!(!(v = iv.next()).done && !(low = it.next()).done && !(high = it.next()).done)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, !v.value ? null : new Long(low.value, high.value)];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    return LongVector;\n}(TypedVector));\nexport { LongVector };\nvar Int8Vector = /** @class */ (function (_super) {\n    __extends(Int8Vector, _super);\n    function Int8Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Int8Vector;\n}(ByteVector));\nexport { Int8Vector };\nvar Int16Vector = /** @class */ (function (_super) {\n    __extends(Int16Vector, _super);\n    function Int16Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Int16Vector;\n}(ByteVector));\nexport { Int16Vector };\nvar Int32Vector = /** @class */ (function (_super) {\n    __extends(Int32Vector, _super);\n    function Int32Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Int32Vector;\n}(ByteVector));\nexport { Int32Vector };\nvar Int64Vector = /** @class */ (function (_super) {\n    __extends(Int64Vector, _super);\n    function Int64Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Int64Vector;\n}(LongVector));\nexport { Int64Vector };\nvar Uint8Vector = /** @class */ (function (_super) {\n    __extends(Uint8Vector, _super);\n    function Uint8Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Uint8Vector;\n}(ByteVector));\nexport { Uint8Vector };\nvar Uint16Vector = /** @class */ (function (_super) {\n    __extends(Uint16Vector, _super);\n    function Uint16Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Uint16Vector;\n}(ByteVector));\nexport { Uint16Vector };\nvar Uint32Vector = /** @class */ (function (_super) {\n    __extends(Uint32Vector, _super);\n    function Uint32Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Uint32Vector;\n}(ByteVector));\nexport { Uint32Vector };\nvar Uint64Vector = /** @class */ (function (_super) {\n    __extends(Uint64Vector, _super);\n    function Uint64Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Uint64Vector;\n}(LongVector));\nexport { Uint64Vector };\nvar Float32Vector = /** @class */ (function (_super) {\n    __extends(Float32Vector, _super);\n    function Float32Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Float32Vector;\n}(ByteVector));\nexport { Float32Vector };\nvar Float64Vector = /** @class */ (function (_super) {\n    __extends(Float64Vector, _super);\n    function Float64Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Float64Vector;\n}(ByteVector));\nexport { Float64Vector };\nLongVector.prototype.stride = 2;\nVector.prototype.lists = [];\nVector.prototype.validity = BitVector.constant;\nVirtualVector.prototype._arrayType = Array;\nBitVector.prototype._arrayType = Uint8Array;\nInt8Vector.prototype._arrayType = Int8Array;\nInt16Vector.prototype._arrayType = Int16Array;\nInt32Vector.prototype._arrayType = Int32Array;\nInt64Vector.prototype._arrayType = Int32Array;\nUint8Vector.prototype._arrayType = Uint8Array;\nUint16Vector.prototype._arrayType = Uint16Array;\nUint32Vector.prototype._arrayType = Uint32Array;\nUint64Vector.prototype._arrayType = Uint32Array;\nDateVector.prototype._arrayType = Uint32Array;\nIndexVector.prototype._arrayType = Int32Array;\nFloat32Vector.prototype._arrayType = Float32Array;\nFloat64Vector.prototype._arrayType = Float64Array;\nfunction arraySet(source, target, index) {\n    for (var i = 0, n = source.length; i < n;) {\n        target[index++] = source[i++];\n    }\n    return index;\n}\nfunction typedArraySet(source, target, index) {\n    return target.set(source, index) || index + source.length;\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { BitVector } from './typed';\nvar StructVector = /** @class */ (function (_super) {\n    __extends(StructVector, _super);\n    function StructVector(validity) {\n        var vectors = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            vectors[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.vectors = vectors;\n        _this.length = Math.max.apply(Math, __spread([0], vectors.map(function (v) { return v.length; })));\n        validity && (_this.validity = BitVector.from(validity));\n        return _this;\n    }\n    StructVector.prototype.get = function (index) {\n        return this.validity.get(index) ? this.vectors.map(function (v) { return v.get(index); }) : null;\n    };\n    StructVector.prototype.concat = function (vector) {\n        return StructVector.from.apply(StructVector, __spread([this,\n            this.length + vector.length,\n            this.validity.concat(vector.validity)], this.vectors.map(function (v, i) { return v.concat(vector.vectors[i]); })));\n    };\n    return StructVector;\n}(Vector));\nexport { StructVector };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlY3Rvci9zdHJ1Y3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELCtEQUErRDtBQUMvRCx3REFBd0Q7QUFDeEQsNkRBQTZEO0FBQzdELG9EQUFvRDtBQUNwRCw2REFBNkQ7QUFDN0QsNkRBQTZEO0FBQzdELEVBQUU7QUFDRiwrQ0FBK0M7QUFDL0MsRUFBRTtBQUNGLDZEQUE2RDtBQUM3RCw4REFBOEQ7QUFDOUQseURBQXlEO0FBQ3pELDREQUE0RDtBQUM1RCwwREFBMEQ7QUFDMUQscUJBQXFCO0FBRXJCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDbEMsT0FBTyxFQUFFLFNBQVMsRUFBZ0IsTUFBTSxTQUFTLENBQUM7QUFFbEQ7SUFBa0MsZ0NBQWE7SUFFM0Msc0JBQVksUUFBc0I7UUFBRSxpQkFBeUI7YUFBekIsVUFBeUIsRUFBekIscUJBQXlCLEVBQXpCLElBQXlCO1lBQXpCLGdDQUF5Qjs7UUFBN0QsWUFDSSxpQkFBTyxTQUlWO1FBSEcsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsS0FBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxPQUFSLElBQUksWUFBSyxDQUFDLEdBQUssT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFDLENBQUMsSUFBSyxPQUFBLENBQUMsQ0FBQyxNQUFNLEVBQVIsQ0FBUSxDQUFDLEVBQUMsQ0FBQztRQUMzRCxRQUFRLElBQUksQ0FBQyxLQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzs7SUFDM0QsQ0FBQztJQUNELDBCQUFHLEdBQUgsVUFBSSxLQUFhO1FBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUMsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBWixDQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDbkYsQ0FBQztJQUNELDZCQUFNLEdBQU4sVUFBTyxNQUFvQjtRQUN2QixNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksT0FBakIsWUFBWSxZQUFNLElBQUk7WUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTTtZQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSyxPQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUEzQixDQUEyQixDQUFDLEdBQzVEO0lBQ04sQ0FBQztJQUNMLG1CQUFDO0FBQUQsQ0FsQkEsQUFrQkMsQ0FsQmlDLE1BQU0sR0FrQnZDIiwiZmlsZSI6InZlY3Rvci9zdHJ1Y3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuLy9cclxuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuLy9cclxuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cclxuXHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gJy4vdmVjdG9yJztcclxuaW1wb3J0IHsgQml0VmVjdG9yLCBWYWxpZGl0eUFyZ3MgfSBmcm9tICcuL3R5cGVkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTdHJ1Y3RWZWN0b3IgZXh0ZW5kcyBWZWN0b3I8YW55W10+IHtcclxuICAgIHByb3RlY3RlZCB2ZWN0b3JzOiBWZWN0b3I8YW55PltdO1xyXG4gICAgY29uc3RydWN0b3IodmFsaWRpdHk6IFZhbGlkaXR5QXJncywgLi4udmVjdG9yczogVmVjdG9yPGFueT5bXSkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy52ZWN0b3JzID0gdmVjdG9ycztcclxuICAgICAgICB0aGlzLmxlbmd0aCA9IE1hdGgubWF4KDAsIC4uLnZlY3RvcnMubWFwKCh2KSA9PiB2Lmxlbmd0aCkpO1xyXG4gICAgICAgIHZhbGlkaXR5ICYmICh0aGlzLnZhbGlkaXR5ID0gQml0VmVjdG9yLmZyb20odmFsaWRpdHkpKTtcclxuICAgIH1cclxuICAgIGdldChpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRpdHkuZ2V0KGluZGV4KSA/IHRoaXMudmVjdG9ycy5tYXAoKHYpID0+IHYuZ2V0KGluZGV4KSkgOiBudWxsO1xyXG4gICAgfVxyXG4gICAgY29uY2F0KHZlY3RvcjogU3RydWN0VmVjdG9yKSB7XHJcbiAgICAgICAgcmV0dXJuIFN0cnVjdFZlY3Rvci5mcm9tKHRoaXMsXHJcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoICsgdmVjdG9yLmxlbmd0aCxcclxuICAgICAgICAgICAgdGhpcy52YWxpZGl0eS5jb25jYXQodmVjdG9yLnZhbGlkaXR5KSxcclxuICAgICAgICAgICAgLi4udGhpcy52ZWN0b3JzLm1hcCgodiwgaSkgPT4gdi5jb25jYXQodmVjdG9yLnZlY3RvcnNbaV0pKVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbn1cclxuIl19\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nvar DictionaryVector = /** @class */ (function (_super) {\n    __extends(DictionaryVector, _super);\n    function DictionaryVector(index, dictionary) {\n        var _this = _super.call(this) || this;\n        _this.keys = index;\n        _this.data = dictionary;\n        _this.length = index && index.length || 0;\n        return _this;\n    }\n    DictionaryVector.prototype.index = function (index) {\n        return this.keys.get(index);\n    };\n    DictionaryVector.prototype.value = function (index) {\n        return this.data.get(index);\n    };\n    DictionaryVector.prototype.get = function (index) {\n        return this.value(this.index(index));\n    };\n    DictionaryVector.prototype.concat = function (vector) {\n        return DictionaryVector.from(this, this.length + vector.length, this.keys.concat(vector.keys), this.data);\n    };\n    DictionaryVector.prototype[Symbol.iterator] = function () {\n        var data, _a, _b, loc, e_1_1, e_1, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    data = this.data;\n                    _d.label = 1;\n                case 1:\n                    _d.trys.push([1, 6, 7, 8]);\n                    _a = __values(this.keys), _b = _a.next();\n                    _d.label = 2;\n                case 2:\n                    if (!!_b.done) return [3 /*break*/, 5];\n                    loc = _b.value;\n                    return [4 /*yield*/, data.get(loc)];\n                case 3:\n                    _d.sent();\n                    _d.label = 4;\n                case 4:\n                    _b = _a.next();\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 8];\n                case 6:\n                    e_1_1 = _d.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 8];\n                case 7:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 8: return [2 /*return*/];\n            }\n        });\n    };\n    return DictionaryVector;\n}(Vector));\nexport { DictionaryVector };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlY3Rvci9kaWN0aW9uYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCwrREFBK0Q7QUFDL0Qsd0RBQXdEO0FBQ3hELDZEQUE2RDtBQUM3RCxvREFBb0Q7QUFDcEQsNkRBQTZEO0FBQzdELDZEQUE2RDtBQUM3RCxFQUFFO0FBQ0YsK0NBQStDO0FBQy9DLEVBQUU7QUFDRiw2REFBNkQ7QUFDN0QsOERBQThEO0FBQzlELHlEQUF5RDtBQUN6RCw0REFBNEQ7QUFDNUQsMERBQTBEO0FBQzFELHFCQUFxQjtBQUVyQixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWxDO0lBQXlDLG9DQUFTO0lBRzlDLDBCQUFZLEtBQXFCLEVBQUUsVUFBcUI7UUFBeEQsWUFDSSxpQkFBTyxTQUlWO1FBSEcsS0FBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDbEIsS0FBSSxDQUFDLElBQUksR0FBRyxVQUFVLENBQUM7UUFDdkIsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUM7O0lBQzdDLENBQUM7SUFDRCxnQ0FBSyxHQUFMLFVBQU0sS0FBYTtRQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsZ0NBQUssR0FBTCxVQUFNLEtBQWE7UUFDZixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUNELDhCQUFHLEdBQUgsVUFBSSxLQUFhO1FBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFDRCxpQ0FBTSxHQUFOLFVBQU8sTUFBMkI7UUFDOUIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUM3QixJQUFJLENBQUMsSUFBSSxDQUNaLENBQUM7SUFDTixDQUFDO0lBQ0EsMkJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ1UsSUFBSSxHQUFLLElBQUksS0FBVCxDQUFVOzs7O29CQUNGLEtBQUEsU0FBQSxJQUFJLENBQUMsSUFBSSxDQUFBOzs7O29CQUFoQixHQUFHO29CQUNWLHFCQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUE7O29CQUFuQixTQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRTNCO0lBQ0wsdUJBQUM7QUFBRCxDQS9CQSxBQStCQyxDQS9Cd0MsTUFBTSxHQStCOUMiLCJmaWxlIjoidmVjdG9yL2RpY3Rpb25hcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuLy9cclxuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuLy9cclxuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cclxuXHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gJy4vdmVjdG9yJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEaWN0aW9uYXJ5VmVjdG9yPFQ+IGV4dGVuZHMgVmVjdG9yPFQ+IHtcclxuICAgIHByb3RlY3RlZCBkYXRhOiBWZWN0b3I8VD47XHJcbiAgICBwcm90ZWN0ZWQga2V5czogVmVjdG9yPG51bWJlcj47XHJcbiAgICBjb25zdHJ1Y3RvcihpbmRleDogVmVjdG9yPG51bWJlcj4sIGRpY3Rpb25hcnk6IFZlY3RvcjxUPikge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5rZXlzID0gaW5kZXg7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGljdGlvbmFyeTtcclxuICAgICAgICB0aGlzLmxlbmd0aCA9IGluZGV4ICYmIGluZGV4Lmxlbmd0aCB8fCAwO1xyXG4gICAgfVxyXG4gICAgaW5kZXgoaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmtleXMuZ2V0KGluZGV4KTtcclxuICAgIH1cclxuICAgIHZhbHVlKGluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmdldChpbmRleCk7XHJcbiAgICB9XHJcbiAgICBnZXQoaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlKHRoaXMuaW5kZXgoaW5kZXgpKTtcclxuICAgIH1cclxuICAgIGNvbmNhdCh2ZWN0b3I6IERpY3Rpb25hcnlWZWN0b3I8VD4pIHtcclxuICAgICAgICByZXR1cm4gRGljdGlvbmFyeVZlY3Rvci5mcm9tKHRoaXMsXHJcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoICsgdmVjdG9yLmxlbmd0aCxcclxuICAgICAgICAgICAgdGhpcy5rZXlzLmNvbmNhdCh2ZWN0b3Iua2V5cyksXHJcbiAgICAgICAgICAgIHRoaXMuZGF0YVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XHJcbiAgICAgICAgbGV0IHsgZGF0YSB9ID0gdGhpcztcclxuICAgICAgICBmb3IgKGNvbnN0IGxvYyBvZiB0aGlzLmtleXMpIHtcclxuICAgICAgICAgICAgeWllbGQgZGF0YS5nZXQobG9jKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { TextDecoder } from 'text-encoding';\nimport { BitVector } from './typed';\nvar ListVectorBase = /** @class */ (function (_super) {\n    __extends(ListVectorBase, _super);\n    function ListVectorBase(validity, values, offsets) {\n        var _this = _super.call(this) || this;\n        _this.values = values;\n        _this.offsets = offsets;\n        validity && (_this.validity = BitVector.from(validity));\n        return _this;\n    }\n    ListVectorBase.prototype.get = function (index) {\n        var batch, from, to, offsets = this.offsets;\n        if (!this.validity.get(index) ||\n            /* return null if `to` is null */\n            ((to = offsets.get(index + 1)) === null) || !(\n        /*\n        return null if `batch` is less than than 0. this check is placed\n        second to avoid creating the [from, batch] tuple if `to` is null\n        */\n        (_a = offsets.get(index, true), _b = __read(_a, 2), from = _b[0], batch = _b[1], _a) && batch > -1)) {\n            return null;\n        }\n        return this.values.slice(from, to, batch);\n        var _a, _b;\n    };\n    ListVectorBase.prototype.concat = function (vector) {\n        return this.constructor.from(this, this.length + vector.length, this.validity.concat(vector.validity), this.values.concat(vector.values), this.offsets.concat(vector.offsets));\n    };\n    ListVectorBase.prototype[Symbol.iterator] = function () {\n        var v, r1, r2, values, it, iv;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    values = this.values;\n                    it = this.offsets[Symbol.iterator]();\n                    iv = this.validity[Symbol.iterator]();\n                    _a.label = 1;\n                case 1:\n                    if (!(!(v = iv.next()).done && !(r1 = it.next()).done && !(r2 = it.next()).done)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, !v.value ? null : values.slice(r1.value[0], r2.value, r1.value[1])];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    return ListVectorBase;\n}(Vector));\nexport { ListVectorBase };\nvar ListVector = /** @class */ (function (_super) {\n    __extends(ListVector, _super);\n    function ListVector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ListVector;\n}(ListVectorBase));\nexport { ListVector };\nvar Utf8Vector = /** @class */ (function (_super) {\n    __extends(Utf8Vector, _super);\n    function Utf8Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Utf8Vector.prototype.get = function (index) {\n        var chars = _super.prototype.get.call(this, index);\n        return chars ? Utf8Vector.decoder.decode(chars) : null;\n    };\n    Utf8Vector.prototype[Symbol.iterator] = function () {\n        var decoder, _a, _b, chars, e_1_1, e_1, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    decoder = Utf8Vector.decoder;\n                    _d.label = 1;\n                case 1:\n                    _d.trys.push([1, 6, 7, 8]);\n                    _a = __values(_super.prototype[Symbol.iterator].call(this)), _b = _a.next();\n                    _d.label = 2;\n                case 2:\n                    if (!!_b.done) return [3 /*break*/, 5];\n                    chars = _b.value;\n                    return [4 /*yield*/, !chars ? null : decoder.decode(chars)];\n                case 3:\n                    _d.sent();\n                    _d.label = 4;\n                case 4:\n                    _b = _a.next();\n                    return [3 /*break*/, 2];\n                case 5: return [3 /*break*/, 8];\n                case 6:\n                    e_1_1 = _d.sent();\n                    e_1 = { error: e_1_1 };\n                    return [3 /*break*/, 8];\n                case 7:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                    return [7 /*endfinally*/];\n                case 8: return [2 /*return*/];\n            }\n        });\n    };\n    Utf8Vector.decoder = new TextDecoder(\"utf-8\");\n    return Utf8Vector;\n}(ListVectorBase));\nexport { Utf8Vector };\nvar FixedSizeListVector = /** @class */ (function (_super) {\n    __extends(FixedSizeListVector, _super);\n    function FixedSizeListVector(size, validity, values) {\n        var _this = _super.call(this) || this;\n        _this.values = values;\n        _this.size = Math.abs(size | 0) || 1;\n        validity && (_this.validity = BitVector.from(validity));\n        return _this;\n    }\n    FixedSizeListVector.prototype.get = function (index) {\n        return !this.validity.get(index) ? null : this.values.slice(this.size * index, this.size * (index + 1));\n    };\n    FixedSizeListVector.prototype.concat = function (vector) {\n        return FixedSizeListVector.from(this, this.length + vector.length, this.size, this.validity.concat(vector.validity), this.values.concat(vector.values));\n    };\n    FixedSizeListVector.prototype[Symbol.iterator] = function () {\n        var v, i, _a, size, length, values, iv;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    i = -1;\n                    _a = this, size = _a.size, length = _a.length, values = _a.values;\n                    iv = this.validity[Symbol.iterator]();\n                    _b.label = 1;\n                case 1:\n                    if (!(!(v = iv.next()).done && ++i < length)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, !v.value ? null : values.slice(size * i, size * (i + 1))];\n                case 2:\n                    _b.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    return FixedSizeListVector;\n}(Vector));\nexport { FixedSizeListVector };\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../format/Schema_generated';\nimport { StructVector } from '../vector/struct';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { Utf8Vector, ListVector, FixedSizeListVector } from '../vector/list';\nimport { Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, Float32Vector, Float64Vector, IndexVector, DateVector, } from '../vector/typed';\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nvar VectorType = Schema_.org.apache.arrow.flatbuf.VectorType;\nvar VectorLayout = Schema_.org.apache.arrow.flatbuf.VectorLayout;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nexport function readVector(field, batch, state, dictionaries) {\n    return readDictionaryVector(field, batch, state, dictionaries) ||\n        readTypedVector(field, batch, state, dictionaries);\n}\nfunction readTypedVector(field, batch, iterator, dictionaries) {\n    var typeType = field.typeType(), readTyped = typedVectorReaders[typeType];\n    if (!readTyped) {\n        throw new Error('Unrecognized vector name \"' + Type[typeType] + '\" type \"' + typeType + '\"');\n    }\n    return readTyped(field, batch, iterator, dictionaries);\n}\nfunction readDictionaryVector(field, batch, iterator, dictionaries) {\n    var encoding;\n    if (dictionaries && (encoding = field.dictionary())) {\n        var id = encoding.id().toFloat64().toString();\n        var fieldType = encoding.indexType() ||\n            /* a dictionary index defaults to signed 32 bit int if unspecified */\n            { bitWidth: function () { return 32; }, isSigned: function () { return true; } };\n        // workaround for https://issues.apache.org/jira/browse/ARROW-1363\n        var indexField = createSyntheticDictionaryIndexField(field, fieldType);\n        var index = readIntVector(indexField, batch, iterator, null, fieldType);\n        return DictionaryVector.create(field, index.length, index, dictionaries[id]);\n    }\n}\nvar IntViews = [Int8Array, Int16Array, Int32Array, Int32Array];\nvar Int32Views = [Int32Array, Int32Array, Int32Array, Int32Array];\nvar UintViews = [Uint8Array, Uint16Array, Uint32Array, Uint32Array];\nvar Uint8Views = [Uint8Array, Uint8Array, Uint8Array, Uint8Array];\nvar Uint32Views = [Uint32Array, Uint32Array, Uint32Array, Uint32Array];\nvar FloatViews = [Int8Array, Int16Array, Float32Array, Float64Array];\nvar createIntDataViews = createDataView.bind(null, IntViews, null);\nvar createUintDataViews = createDataView.bind(null, UintViews, null);\nvar createDateDataViews = createDataView.bind(null, Uint32Views, null);\nvar createFloatDataViews = createDataView.bind(null, FloatViews, null);\nvar createNestedDataViews = createDataView.bind(null, Uint32Views, null);\nvar createValidityDataViews = createDataView.bind(null, Uint8Views, null);\nvar createUtf8DataViews = createDataView.bind(null, Uint8Views, Int32Views);\nvar floatVectors = (_a = {},\n    _a[Precision.SINGLE] = Float32Vector,\n    _a[Precision.DOUBLE] = Float64Vector,\n    _a);\nvar intVectors = [\n    [/* unsigned */ Uint8Vector, /* signed */ Int8Vector],\n    [/* unsigned */ Uint16Vector, /* signed */ Int16Vector],\n    [/* unsigned */ Uint32Vector, /* signed */ Int32Vector],\n    [/* unsigned */ Uint64Vector, /* signed */ Int64Vector]\n];\nfunction readIntVector(field, batch, iterator, dictionaries, fieldType) {\n    var type = (fieldType || field.type(new Int()));\n    return type.isSigned() ?\n        read_IntVector(field, batch, iterator, dictionaries, type) :\n        readUintVector(field, batch, iterator, dictionaries, type);\n}\nvar read_IntVector = readVectorLayout(createIntDataViews, createIntVector);\nvar readUintVector = readVectorLayout(createUintDataViews, createIntVector);\nfunction createIntVector(field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var type = fieldType || field.type(new Int()), bitWidth = type.bitWidth();\n    var Vector = valueForBitWidth(bitWidth, intVectors)[+type.isSigned()];\n    return Vector.create(field, length, validity, data || offsets);\n    // ----------------------------------------------- 👆:\n    // Workaround for https://issues.apache.org/jira/browse/ARROW-1363\n    // This bug causes dictionary encoded vector indicies' IntVector data\n    // buffers to be tagged as VectorType.OFFSET (0) in the field metadata\n    // instead of VectorType.DATA. The `readVectorLayout` routine strictly\n    // obeys the types in the field metadata, so if we're parsing an Arrow\n    // file written by a version of the library published before ARROW-1363\n    // was fixed, the IntVector's data buffer will be null, and the offset\n    // buffer will be the actual data. If data is null, it's safe to assume\n    // the offset buffer is the data, because IntVectors don't have offsets.\n}\nvar readFloatVector = readVectorLayout(createFloatDataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var type = field.type(new FloatingPoint());\n    var Vector = floatVectors[type.precision()];\n    return Vector.create(field, length, validity, data);\n});\nvar readDateVector = readVectorLayout(createDateDataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    return DateVector.create(field, length, validity, data);\n});\nvar readUtf8Vector = readVectorLayout(createUtf8DataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var offsetsAdjusted = new Int32Array(offsets.buffer, offsets.byteOffset, length + 1);\n    return Utf8Vector.create(field, length, validity, Uint8Vector.create(field, data.length, null, data), IndexVector.create(field, length + 1, null, offsetsAdjusted));\n});\nvar readListVector = readVectorLayout(createNestedDataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var offsetsAdjusted = new Int32Array(offsets.buffer, offsets.byteOffset, length + 1);\n    return ListVector.create(field, length, validity, readVector(field.children(0), batch, iterator, dictionaries), IndexVector.create(field, length + 1, null, offsetsAdjusted));\n});\nvar readFixedSizeListVector = readVectorLayout(createNestedDataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var size = field.type(new FixedSizeList()).listSize();\n    return FixedSizeListVector.create(field, length, size, validity, readVector(field.children(0), batch, iterator, dictionaries));\n});\nvar readStructVector = readVectorLayout(createNestedDataViews, function (field, length, data, validity, offsets, fieldType, batch, iterator, dictionaries) {\n    var vectors = [];\n    for (var i = -1, n = field.childrenLength(); ++i < n;) {\n        vectors[i] = readVector(field.children(i), batch, iterator, dictionaries);\n    }\n    return StructVector.create.apply(StructVector, __spread([field, length, validity], vectors));\n});\nvar typedVectorReaders = (_b = {},\n    _b[Type.Int] = readIntVector,\n    _b[Type.Date] = readDateVector,\n    _b[Type.List] = readListVector,\n    _b[Type.Utf8] = readUtf8Vector,\n    _b[Type.Struct_] = readStructVector,\n    _b[Type.FloatingPoint] = readFloatVector,\n    _b[Type.FixedSizeList] = readFixedSizeListVector,\n    _b);\nfunction readVectorLayout(createDataView, createVector) {\n    return function readLayout(field, chunk, iterator, dictionaries, integerFieldType) {\n        var batch = chunk.data;\n        var layoutLength = field.layoutLength();\n        var node = batch.nodes(iterator.nodeIndex++);\n        var data, offsets, validity;\n        var type, bitWidth, bufferLength, nodeLength = node.length().low;\n        for (var i = -1; ++i < layoutLength;) {\n            var layout = field.layout(i);\n            var buffer = batch.buffers(iterator.bufferIndex++);\n            if ((type = layout.type()) === VectorType.TYPE ||\n                (bufferLength = buffer.length().low) <= 0 ||\n                (bitWidth = layout.bitWidth()) <= 0) {\n                continue;\n            }\n            else if (type === VectorType.DATA) {\n                data = createDataView(chunk, type, bitWidth, buffer.offset().low, bufferLength);\n            }\n            else if (type === VectorType.OFFSET) {\n                offsets = createDataView(chunk, type, bitWidth, buffer.offset().low, bufferLength);\n            }\n            else if (node.nullCount().low > 0) {\n                validity = createValidityDataViews(chunk, type, bitWidth, buffer.offset().low, nodeLength);\n            }\n        }\n        return createVector(field, nodeLength, data, validity, offsets, integerFieldType, chunk, iterator, dictionaries);\n    };\n}\nfunction createDataView(dataViews, offsetViews, batch, type, bitWidth, offset, length) {\n    var buffer = batch.bytes.buffer;\n    var byteLength = buffer.byteLength;\n    var byteOffset = batch.offset + offset;\n    var DataViewType = valueForBitWidth(bitWidth, type === VectorType.OFFSET && offsetViews || dataViews);\n    var dataViewLength = ((byteOffset + length) <= byteLength\n        ? length\n        : byteLength - byteOffset) / DataViewType['BYTES_PER_ELEMENT'];\n    return new DataViewType(buffer, byteOffset, dataViewLength);\n}\nfunction valueForBitWidth(bitWidth, values) {\n    return values[bitWidth >> 4] || values[3];\n}\nfunction createSyntheticDictionaryIndexField(field, type) {\n    var layouts = [];\n    var builder = new flatbuffers.Builder();\n    if (field.nullable()) {\n        VectorLayout.startVectorLayout(builder);\n        VectorLayout.addBitWidth(builder, 8);\n        VectorLayout.addType(builder, VectorType.VALIDITY);\n        builder.finish(VectorLayout.endVectorLayout(builder));\n        layouts.push(VectorLayout.getRootAsVectorLayout(builder.dataBuffer()));\n        builder = new flatbuffers.Builder();\n    }\n    VectorLayout.startVectorLayout(builder);\n    VectorLayout.addBitWidth(builder, type.bitWidth());\n    VectorLayout.addType(builder, VectorType.DATA);\n    builder.finish(VectorLayout.endVectorLayout(builder));\n    layouts.push(VectorLayout.getRootAsVectorLayout(builder.dataBuffer()));\n    return Object.create(field, {\n        layout: { value: function (i) { return layouts[i]; } },\n        layoutLength: { value: function () { return layouts.length; } }\n    });\n}\nvar _a, _b;\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { readVector } from './vector';\nexport function readDictionaries(field, batch, iterator, dictionaries) {\n    var id, encoding, i, n, _a, _b, result, e_1_1, e_1, _c;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0:\n                encoding = field && field.dictionary();\n                if (!(encoding && batch.id === (id = encoding.id().toFloat64().toString()))) return [3 /*break*/, 2];\n                return [4 /*yield*/, [id, readVector(field, batch, iterator, null)]];\n            case 1:\n                _d.sent();\n                return [2 /*return*/];\n            case 2:\n                i = -1, n = field && field.childrenLength() || 0;\n                _d.label = 3;\n            case 3:\n                if (!(++i < n)) return [3 /*break*/, 12];\n                _d.label = 4;\n            case 4:\n                _d.trys.push([4, 9, 10, 11]);\n                _a = __values(readDictionaries(field.children(i), batch, iterator, dictionaries)), _b = _a.next();\n                _d.label = 5;\n            case 5:\n                if (!!_b.done) return [3 /*break*/, 8];\n                result = _b.value;\n                return [4 /*yield*/, result];\n            case 6:\n                _d.sent();\n                return [2 /*return*/];\n            case 7:\n                _b = _a.next();\n                return [3 /*break*/, 5];\n            case 8: return [3 /*break*/, 11];\n            case 9:\n                e_1_1 = _d.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 11];\n            case 10:\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n                return [7 /*endfinally*/];\n            case 11: return [3 /*break*/, 3];\n            case 12: return [2 /*return*/];\n        }\n    });\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRlci9kaWN0aW9uYXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCwrREFBK0Q7QUFDL0Qsd0RBQXdEO0FBQ3hELDZEQUE2RDtBQUM3RCxvREFBb0Q7QUFDcEQsNkRBQTZEO0FBQzdELDZEQUE2RDtBQUM3RCxFQUFFO0FBQ0YsK0NBQStDO0FBQy9DLEVBQUU7QUFDRiw2REFBNkQ7QUFDN0QsOERBQThEO0FBQzlELHlEQUF5RDtBQUN6RCw0REFBNEQ7QUFDNUQsMERBQTBEO0FBQzFELHFCQUFxQjtBQUVyQixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTXRDLE1BQU0sMkJBQTRCLEtBQW1CLEVBQ25CLEtBQW1CLEVBQ25CLFFBQXVCLEVBQ3ZCLFlBQTBCOzs7OztnQkFDeEMsUUFBUSxHQUFHLEtBQUssSUFBSSxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7cUJBQ25ELENBQUEsUUFBUSxJQUFJLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUEsRUFBcEUsd0JBQW9FO2dCQUNwRSxxQkFBTSxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBQTs7Z0JBQXBELFNBQW9ELENBQUM7Z0JBQ3JELHNCQUFPOztnQkFFRixDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssSUFBSSxLQUFLLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQzs7O3FCQUFFLENBQUEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFBOzs7O2dCQUUzQyxLQUFBLFNBQUEsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFlBQVksQ0FBQyxDQUFBOzs7O2dCQUE1RSxNQUFNO2dCQUNYLHFCQUFNLE1BQU0sRUFBQTs7Z0JBQVosU0FBWSxDQUFDO2dCQUNiLHNCQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBR2xCIiwiZmlsZSI6InJlYWRlci9kaWN0aW9uYXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuLy8gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4vLyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbi8vXHJcbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbi8vXHJcbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuLy8gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuLy8gdW5kZXIgdGhlIExpY2Vuc2UuXHJcblxyXG5pbXBvcnQgeyByZWFkVmVjdG9yIH0gZnJvbSAnLi92ZWN0b3InO1xyXG5pbXBvcnQgeyBNZXNzYWdlQmF0Y2ggfSBmcm9tICcuL21lc3NhZ2UnO1xyXG5pbXBvcnQgKiBhcyBTY2hlbWFfIGZyb20gJy4uL2Zvcm1hdC9TY2hlbWFfZ2VuZXJhdGVkJztcclxuaW1wb3J0IHsgSXRlcmF0b3JTdGF0ZSwgRGljdGlvbmFyaWVzIH0gZnJvbSAnLi9hcnJvdyc7XHJcbmltcG9ydCBGaWVsZCA9IFNjaGVtYV8ub3JnLmFwYWNoZS5hcnJvdy5mbGF0YnVmLkZpZWxkO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uKiByZWFkRGljdGlvbmFyaWVzKGZpZWxkOiBGaWVsZCB8IG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXRjaDogTWVzc2FnZUJhdGNoLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlcmF0b3I6IEl0ZXJhdG9yU3RhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWN0aW9uYXJpZXM6IERpY3Rpb25hcmllcykge1xyXG4gICAgbGV0IGlkOiBzdHJpbmcsIGVuY29kaW5nID0gZmllbGQgJiYgZmllbGQuZGljdGlvbmFyeSgpO1xyXG4gICAgaWYgKGVuY29kaW5nICYmIGJhdGNoLmlkID09PSAoaWQgPSBlbmNvZGluZy5pZCgpLnRvRmxvYXQ2NCgpLnRvU3RyaW5nKCkpKSB7XHJcbiAgICAgICAgeWllbGQgW2lkLCByZWFkVmVjdG9yKGZpZWxkLCBiYXRjaCwgaXRlcmF0b3IsIG51bGwpXTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBmb3IgKGxldCBpID0gLTEsIG4gPSBmaWVsZCAmJiBmaWVsZC5jaGlsZHJlbkxlbmd0aCgpIHx8IDA7ICsraSA8IG47KSB7XHJcbiAgICAgICAgLy8gU2luY2UgYSBkaWN0aW9uYXJ5IGJhdGNoIGNhbiBvbmx5IGNvbnRhaW4gYSBzaW5nbGUgdmVjdG9yLCByZXR1cm4gZWFybHkgYWZ0ZXIgd2UgZmluZCBpdFxyXG4gICAgICAgIGZvciAobGV0IHJlc3VsdCBvZiByZWFkRGljdGlvbmFyaWVzKGZpZWxkLmNoaWxkcmVuKGkpLCBiYXRjaCwgaXRlcmF0b3IsIGRpY3Rpb25hcmllcykpIHtcclxuICAgICAgICAgICAgeWllbGQgcmVzdWx0O1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../format/Schema_generated';\nimport * as Message_ from '../format/Message_generated';\nimport { readFile } from './file';\nimport { readStream } from './stream';\nimport { readVector } from './vector';\nimport { readDictionaries } from './dictionary';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nexport var Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nexport var RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nexport function readRecords() {\n    var bytes = [];\n    for (_i = 0; _i < arguments.length; _i++) {\n        bytes[_i] = arguments[_i];\n    }\n    var _i, e_1, e_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 7]);\n                return [5 /*yield**/, __values(readFile.apply(void 0, __spread(bytes)))];\n            case 1:\n                _a.sent();\n                return [3 /*break*/, 7];\n            case 2:\n                e_1 = _a.sent();\n                _a.label = 3;\n            case 3:\n                _a.trys.push([3, 5, , 6]);\n                return [5 /*yield**/, __values(readStream.apply(void 0, __spread(bytes)))];\n            case 4:\n                _a.sent();\n                return [3 /*break*/, 6];\n            case 5:\n                e_2 = _a.sent();\n                throw new Error('Invalid Arrow buffer');\n            case 6: return [3 /*break*/, 7];\n            case 7: return [2 /*return*/];\n        }\n    });\n}\nexport function readBuffers() {\n    var bytes = [];\n    for (_i = 0; _i < arguments.length; _i++) {\n        bytes[_i] = arguments[_i];\n    }\n    var _i, dictionaries, byteBuffers, _a, _b, _c, schema, batch, vectors, state, index, fieldsLength, _d, _e, _f, id, vector, e_3_1, e_3, _g, e_4, _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                dictionaries = {};\n                byteBuffers = bytes.map(toByteBuffer);\n                _j.label = 1;\n            case 1:\n                _j.trys.push([1, 7, 8, 9]);\n                _a = __values(readRecords.apply(void 0, __spread(byteBuffers))), _b = _a.next();\n                _j.label = 2;\n            case 2:\n                if (!!_b.done) return [3 /*break*/, 6];\n                _c = _b.value, schema = _c.schema, batch = _c.batch;\n                vectors = [];\n                state = { nodeIndex: 0, bufferIndex: 0 };\n                index = -1, fieldsLength = schema.fieldsLength();\n                if (!batch.id) return [3 /*break*/, 3];\n                while (++index < fieldsLength) {\n                    try {\n                        for (_d = __values(readDictionaries(schema.fields(index), batch, state, dictionaries)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                            _f = __read(_e.value, 2), id = _f[0], vector = _f[1];\n                            dictionaries[id] = dictionaries[id] && dictionaries[id].concat(vector) || vector;\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (_e && !_e.done && (_h = _d.return)) _h.call(_d);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n                return [3 /*break*/, 5];\n            case 3:\n                while (++index < fieldsLength) {\n                    vectors[index] = readVector(schema.fields(index), batch, state, dictionaries);\n                }\n                return [4 /*yield*/, vectors];\n            case 4:\n                _j.sent();\n                _j.label = 5;\n            case 5:\n                _b = _a.next();\n                return [3 /*break*/, 2];\n            case 6: return [3 /*break*/, 9];\n            case 7:\n                e_3_1 = _j.sent();\n                e_3 = { error: e_3_1 };\n                return [3 /*break*/, 9];\n            case 8:\n                try {\n                    if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n                }\n                finally { if (e_3) throw e_3.error; }\n                return [7 /*endfinally*/];\n            case 9: return [2 /*return*/];\n        }\n    });\n}\nfunction toByteBuffer(bytes) {\n    var arr = bytes || new Uint8Array(0);\n    if (typeof bytes === 'string') {\n        arr = new Uint8Array(bytes.length);\n        for (var i = -1, n = bytes.length; ++i < n;) {\n            arr[i] = bytes.charCodeAt(i);\n        }\n        return new ByteBuffer(arr);\n    }\n    return new ByteBuffer(arr);\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,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RUQsT0FBTyxFQUFFLEtBQUssR0FBRyxZQUFZLEVBQUUsQ0FBQztvQkFDNUIsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ2xGLENBQUM7Z0JBQ0QscUJBQU0sT0FBTyxFQUFBOztnQkFBYixTQUFhLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FHekI7QUFFRCxzQkFBc0IsS0FBb0M7SUFDdEQsSUFBSSxHQUFHLEdBQWUsS0FBWSxJQUFJLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hELEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUIsR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztZQUMxQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFDRCxNQUFNLENBQUMsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDL0IsQ0FBQyIsImZpbGUiOiJyZWFkZXIvYXJyb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuLy9cclxuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuLy9cclxuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cclxuXHJcbmltcG9ydCB7IGZsYXRidWZmZXJzIH0gZnJvbSAnZmxhdGJ1ZmZlcnMnO1xyXG5pbXBvcnQgKiBhcyBTY2hlbWFfIGZyb20gJy4uL2Zvcm1hdC9TY2hlbWFfZ2VuZXJhdGVkJztcclxuaW1wb3J0ICogYXMgTWVzc2FnZV8gZnJvbSAnLi4vZm9ybWF0L01lc3NhZ2VfZ2VuZXJhdGVkJztcclxuXHJcbmltcG9ydCB7IHJlYWRGaWxlIH0gZnJvbSAnLi9maWxlJztcclxuaW1wb3J0IHsgcmVhZFN0cmVhbSB9IGZyb20gJy4vc3RyZWFtJztcclxuaW1wb3J0IHsgcmVhZFZlY3RvciB9IGZyb20gJy4vdmVjdG9yJztcclxuaW1wb3J0IHsgVmVjdG9yIH0gZnJvbSAnLi4vdmVjdG9yL3ZlY3Rvcic7XHJcbmltcG9ydCB7IHJlYWREaWN0aW9uYXJpZXMgfSBmcm9tICcuL2RpY3Rpb25hcnknO1xyXG5cclxuaW1wb3J0IEJ5dGVCdWZmZXIgPSBmbGF0YnVmZmVycy5CeXRlQnVmZmVyO1xyXG5leHBvcnQgaW1wb3J0IFNjaGVtYSA9IFNjaGVtYV8ub3JnLmFwYWNoZS5hcnJvdy5mbGF0YnVmLlNjaGVtYTtcclxuZXhwb3J0IGltcG9ydCBSZWNvcmRCYXRjaCA9IE1lc3NhZ2VfLm9yZy5hcGFjaGUuYXJyb3cuZmxhdGJ1Zi5SZWNvcmRCYXRjaDtcclxuZXhwb3J0IHR5cGUgRGljdGlvbmFyaWVzID0geyBbazogc3RyaW5nXTogVmVjdG9yPGFueT4gfTtcclxuZXhwb3J0IHR5cGUgSXRlcmF0b3JTdGF0ZSA9IHsgbm9kZUluZGV4OiBudW1iZXI7IGJ1ZmZlckluZGV4OiBudW1iZXIgfTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiogcmVhZFJlY29yZHMoLi4uYnl0ZXM6IEJ5dGVCdWZmZXJbXSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICB5aWVsZCogcmVhZEZpbGUoLi4uYnl0ZXMpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHlpZWxkKiByZWFkU3RyZWFtKC4uLmJ5dGVzKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBBcnJvdyBidWZmZXInKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiogcmVhZEJ1ZmZlcnMoLi4uYnl0ZXM6IEFycmF5PFVpbnQ4QXJyYXkgfCBCdWZmZXIgfCBzdHJpbmc+KSB7XHJcbiAgICBjb25zdCBkaWN0aW9uYXJpZXM6IERpY3Rpb25hcmllcyA9IHt9O1xyXG4gICAgY29uc3QgYnl0ZUJ1ZmZlcnMgPSBieXRlcy5tYXAodG9CeXRlQnVmZmVyKTtcclxuICAgIGZvciAobGV0IHsgc2NoZW1hLCBiYXRjaCB9IG9mIHJlYWRSZWNvcmRzKC4uLmJ5dGVCdWZmZXJzKSkge1xyXG4gICAgICAgIGxldCB2ZWN0b3JzOiBWZWN0b3I8YW55PltdID0gW107XHJcbiAgICAgICAgbGV0IHN0YXRlID0geyBub2RlSW5kZXg6IDAsIGJ1ZmZlckluZGV4OiAwIH07XHJcbiAgICAgICAgbGV0IGluZGV4ID0gLTEsIGZpZWxkc0xlbmd0aCA9IHNjaGVtYS5maWVsZHNMZW5ndGgoKTtcclxuICAgICAgICBpZiAoYmF0Y2guaWQpIHtcclxuICAgICAgICAgICAgd2hpbGUgKCsraW5kZXggPCBmaWVsZHNMZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IFtpZCwgdmVjdG9yXSBvZiByZWFkRGljdGlvbmFyaWVzKHNjaGVtYS5maWVsZHMoaW5kZXgpLCBiYXRjaCwgc3RhdGUsIGRpY3Rpb25hcmllcykpIHtcclxuICAgICAgICAgICAgICAgICAgICBkaWN0aW9uYXJpZXNbaWRdID0gZGljdGlvbmFyaWVzW2lkXSAmJiBkaWN0aW9uYXJpZXNbaWRdLmNvbmNhdCh2ZWN0b3IpIHx8IHZlY3RvcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHdoaWxlICgrK2luZGV4IDwgZmllbGRzTGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICB2ZWN0b3JzW2luZGV4XSA9IHJlYWRWZWN0b3Ioc2NoZW1hLmZpZWxkcyhpbmRleCksIGJhdGNoLCBzdGF0ZSwgZGljdGlvbmFyaWVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB5aWVsZCB2ZWN0b3JzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdG9CeXRlQnVmZmVyKGJ5dGVzPzogVWludDhBcnJheSB8IEJ1ZmZlciB8IHN0cmluZykge1xyXG4gICAgbGV0IGFycjogVWludDhBcnJheSA9IGJ5dGVzIGFzIGFueSB8fCBuZXcgVWludDhBcnJheSgwKTtcclxuICAgIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgYXJyID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMubGVuZ3RoKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gLTEsIG4gPSBieXRlcy5sZW5ndGg7ICsraSA8IG47KSB7XHJcbiAgICAgICAgICAgIGFycltpXSA9IGJ5dGVzLmNoYXJDb2RlQXQoaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgQnl0ZUJ1ZmZlcihhcnIpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBCeXRlQnVmZmVyKGFycik7XHJcbn1cclxuIl19\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { readBuffers } from './reader/arrow';\nimport { sliceToRangeArgs } from './vector/vector';\nvar Table = /** @class */ (function () {\n    function Table(columns) {\n        this._columns = columns || [];\n        this.length = Math.max.apply(Math, __spread(this._columns.map(function (v) { return v.length; })));\n        this._columnsMap = this._columns.reduce(function (map, vec) {\n            return (map[vec.name] = vec) && map || map;\n        }, {});\n    }\n    Table.from = function () {\n        var bytes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            bytes[_i] = arguments[_i];\n        }\n        var columns;\n        var _loop_1 = function (vectors) {\n            columns = !columns ? vectors : columns.map(function (v, i) { return v.concat(vectors[i]); });\n        };\n        try {\n            for (var _a = __values(readBuffers.apply(void 0, __spread(bytes))), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var vectors = _b.value;\n                _loop_1(vectors);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return new Table(columns);\n        var e_1, _c;\n    };\n    Table.fromStruct = function (vector) {\n        return new Table(vector.vectors);\n    };\n    Table.prototype[Symbol.iterator] = function () {\n        var cols, i, n;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    cols = this._columns, i = -1, n = this.length;\n                    _a.label = 1;\n                case 1:\n                    if (!(++i < n)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, rowAsMap(i, cols)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    };\n    Table.prototype.rows = function (startRow, endRow, compact) {\n        var start, end, rowIndex, length, _a, rowOffset, rowsTotal;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    start = startRow, end = endRow;\n                    if (typeof startRow === 'boolean') {\n                        compact = startRow;\n                        start = end;\n                        end = undefined;\n                    }\n                    else if (typeof endRow === 'boolean') {\n                        compact = endRow;\n                        end = undefined;\n                    }\n                    rowIndex = -1, length = this.length;\n                    _a = __read(sliceToRangeArgs(length, start, end), 2), rowOffset = _a[0], rowsTotal = _a[1];\n                    _b.label = 1;\n                case 1:\n                    if (!(++rowIndex < rowsTotal)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, this.getRow((rowIndex + rowOffset) % length, compact)];\n                case 2:\n                    _b.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    Table.prototype.cols = function (startCol, endCol) {\n        var _a, _b, column, e_2_1, e_2, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    _d.trys.push([0, 5, 6, 7]);\n                    _a = __values(this._columns.slice(startCol, endCol)), _b = _a.next();\n                    _d.label = 1;\n                case 1:\n                    if (!!_b.done) return [3 /*break*/, 4];\n                    column = _b.value;\n                    return [4 /*yield*/, column];\n                case 2:\n                    _d.sent();\n                    _d.label = 3;\n                case 3:\n                    _b = _a.next();\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 7];\n                case 5:\n                    e_2_1 = _d.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3 /*break*/, 7];\n                case 6:\n                    try {\n                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                    return [7 /*endfinally*/];\n                case 7: return [2 /*return*/];\n            }\n        });\n    };\n    Table.prototype.getRow = function (rowIndex, compact) {\n        return (compact && rowAsArray || rowAsObject)(rowIndex, this._columns);\n    };\n    Table.prototype.getCell = function (columnName, rowIndex) {\n        return this.getColumn(columnName).get(rowIndex);\n    };\n    Table.prototype.getCellAt = function (columnIndex, rowIndex) {\n        return this.getColumnAt(columnIndex).get(rowIndex);\n    };\n    Table.prototype.getColumn = function (columnName) {\n        return this._columnsMap[columnName];\n    };\n    Table.prototype.getColumnAt = function (columnIndex) {\n        return this._columns[columnIndex];\n    };\n    Table.prototype.toString = function (options) {\n        var index = typeof options === 'object' ? options && !!options.index\n            : typeof options === 'boolean' ? !!options\n                : false;\n        var length = this.length;\n        if (length <= 0) {\n            return '';\n        }\n        var maxColumnWidths = [];\n        var rows = new Array(length + 1);\n        rows[0] = this._columns.map(function (c) { return c.name; });\n        index && rows[0].unshift('Index');\n        for (var i = -1, n = rows.length - 1; ++i < n;) {\n            rows[i + 1] = this.getRow(i, true);\n            index && rows[i + 1].unshift(i);\n        }\n        // Pass one to convert to strings and count max column widths\n        for (var i = -1, n = rows.length; ++i < n;) {\n            var row = rows[i];\n            for (var j = -1, k = row.length; ++j < k;) {\n                var val = row[j] = \"\" + row[j];\n                maxColumnWidths[j] = !maxColumnWidths[j]\n                    ? val.length\n                    : Math.max(maxColumnWidths[j], val.length);\n            }\n        }\n        // Pass two to pad each one to max column width\n        for (var i = -1, n = rows.length; ++i < n;) {\n            var row = rows[i];\n            for (var j = -1, k = row.length; ++j < k;) {\n                row[j] = leftPad(row[j], ' ', maxColumnWidths[j]);\n            }\n            rows[i] = row.join(', ');\n        }\n        return rows.join('\\n');\n    };\n    return Table;\n}());\nexport { Table };\nTable.prototype.length = 0;\nfunction leftPad(str, fill, n) {\n    return (new Array(n + 1).join(fill) + str).slice(-1 * n);\n}\nfunction rowAsMap(row, columns) {\n    return columns.reduce(function (map, vector) { return map.set(vector.name, vector.get(row)); }, new Map());\n}\nfunction rowAsObject(rowIndex, columns) {\n    return columns.reduce(function (row, vector) { return (row[vector.name] = vector.get(rowIndex)) && row || row; }, Object.create(null));\n}\nfunction rowAsArray(rowIndex, columns) {\n    return columns.reduce(function (row, vector, columnIndex) { return (row[columnIndex] = vector.get(rowIndex)) && row || row; }, new Array(columns.length));\n}\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from './table';\nimport { readBuffers } from './reader/arrow';\nimport { Vector } from './vector/vector';\nimport { StructVector } from './vector/struct';\nimport { DictionaryVector } from './vector/dictionary';\nimport { ListVector, Utf8Vector, FixedSizeListVector } from './vector/list';\nimport { TypedVector, BitVector, DateVector, IndexVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, Float32Vector, Float64Vector, } from './vector/typed';\nexport { Table, readBuffers, Vector, BitVector, ListVector, Utf8Vector, DateVector, IndexVector, TypedVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, Float32Vector, Float64Vector, StructVector, DictionaryVector, FixedSizeListVector, };\n/* These exports are needed for the closure umd targets */\ntry {\n    var Arrow = eval('exports');\n    if (typeof Arrow === 'object') {\n        // string indexers tell closure compiler not to rename these properties\n        Arrow['Table'] = Table;\n        Arrow['readBuffers'] = readBuffers;\n        Arrow['Vector'] = Vector;\n        Arrow['BitVector'] = BitVector;\n        Arrow['ListVector'] = ListVector;\n        Arrow['Utf8Vector'] = Utf8Vector;\n        Arrow['DateVector'] = DateVector;\n        Arrow['IndexVector'] = IndexVector;\n        Arrow['TypedVector'] = TypedVector;\n        Arrow['Int8Vector'] = Int8Vector;\n        Arrow['Int16Vector'] = Int16Vector;\n        Arrow['Int32Vector'] = Int32Vector;\n        Arrow['Int64Vector'] = Int64Vector;\n        Arrow['Uint8Vector'] = Uint8Vector;\n        Arrow['Uint16Vector'] = Uint16Vector;\n        Arrow['Uint32Vector'] = Uint32Vector;\n        Arrow['Uint64Vector'] = Uint64Vector;\n        Arrow['Float32Vector'] = Float32Vector;\n        Arrow['Float64Vector'] = Float64Vector;\n        Arrow['StructVector'] = StructVector;\n        Arrow['DictionaryVector'] = DictionaryVector;\n        Arrow['FixedSizeListVector'] = FixedSizeListVector;\n    }\n}\ncatch (e) { }\n/* end closure exports */\n\n//# sourceMappingURL=data:application/json;charset=utf8;base64,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Q0FBQztRQUNyQyxLQUFLLENBQUMsZUFBZSxDQUFDLEdBQUcsYUFBYSxDQUFDO1FBQ3ZDLEtBQUssQ0FBQyxlQUFlLENBQUMsR0FBRyxhQUFhLENBQUM7UUFDdkMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxHQUFHLFlBQVksQ0FBQztRQUNyQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQztRQUM3QyxLQUFLLENBQUMscUJBQXFCLENBQUMsR0FBRyxtQkFBbUIsQ0FBQztJQUN2RCxDQUFDO0FBQ0wsQ0FBQztBQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBMEIsQ0FBQztBQUN4Qyx5QkFBeUIiLCJmaWxlIjoiQXJyb3cuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuLy9cclxuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuLy9cclxuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cclxuXHJcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnLi90YWJsZSc7XHJcbmltcG9ydCB7IHJlYWRCdWZmZXJzIH0gZnJvbSAnLi9yZWFkZXIvYXJyb3cnO1xyXG5pbXBvcnQgeyBWZWN0b3IgfSBmcm9tICcuL3ZlY3Rvci92ZWN0b3InO1xyXG5pbXBvcnQgeyBTdHJ1Y3RWZWN0b3IgfSBmcm9tICcuL3ZlY3Rvci9zdHJ1Y3QnO1xyXG5pbXBvcnQgeyBEaWN0aW9uYXJ5VmVjdG9yIH0gZnJvbSAnLi92ZWN0b3IvZGljdGlvbmFyeSc7XHJcbmltcG9ydCB7IExpc3RWZWN0b3IsIFV0ZjhWZWN0b3IsIEZpeGVkU2l6ZUxpc3RWZWN0b3IgfSBmcm9tICcuL3ZlY3Rvci9saXN0JztcclxuaW1wb3J0IHtcclxuICAgIFR5cGVkVmVjdG9yLCBCaXRWZWN0b3IsXHJcbiAgICBEYXRlVmVjdG9yLCBJbmRleFZlY3RvcixcclxuICAgIEludDhWZWN0b3IsIEludDE2VmVjdG9yLFxyXG4gICAgSW50MzJWZWN0b3IsIEludDY0VmVjdG9yLFxyXG4gICAgVWludDhWZWN0b3IsIFVpbnQxNlZlY3RvcixcclxuICAgIFVpbnQzMlZlY3RvciwgVWludDY0VmVjdG9yLFxyXG4gICAgRmxvYXQzMlZlY3RvciwgRmxvYXQ2NFZlY3RvcixcclxufSBmcm9tICcuL3ZlY3Rvci90eXBlZCc7XHJcblxyXG5leHBvcnQge1xyXG4gICAgVGFibGUsIHJlYWRCdWZmZXJzLFxyXG4gICAgVmVjdG9yLFxyXG4gICAgQml0VmVjdG9yLFxyXG4gICAgTGlzdFZlY3RvcixcclxuICAgIFV0ZjhWZWN0b3IsXHJcbiAgICBEYXRlVmVjdG9yLFxyXG4gICAgSW5kZXhWZWN0b3IsXHJcbiAgICBUeXBlZFZlY3RvcixcclxuICAgIEludDhWZWN0b3IsXHJcbiAgICBJbnQxNlZlY3RvcixcclxuICAgIEludDMyVmVjdG9yLFxyXG4gICAgSW50NjRWZWN0b3IsXHJcbiAgICBVaW50OFZlY3RvcixcclxuICAgIFVpbnQxNlZlY3RvcixcclxuICAgIFVpbnQzMlZlY3RvcixcclxuICAgIFVpbnQ2NFZlY3RvcixcclxuICAgIEZsb2F0MzJWZWN0b3IsXHJcbiAgICBGbG9hdDY0VmVjdG9yLFxyXG4gICAgU3RydWN0VmVjdG9yLFxyXG4gICAgRGljdGlvbmFyeVZlY3RvcixcclxuICAgIEZpeGVkU2l6ZUxpc3RWZWN0b3IsXHJcbn07XHJcblxyXG4vKiBUaGVzZSBleHBvcnRzIGFyZSBuZWVkZWQgZm9yIHRoZSBjbG9zdXJlIHVtZCB0YXJnZXRzICovXHJcbnRyeSB7XHJcbiAgICBjb25zdCBBcnJvdyA9IGV2YWwoJ2V4cG9ydHMnKTtcclxuICAgIGlmICh0eXBlb2YgQXJyb3cgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgLy8gc3RyaW5nIGluZGV4ZXJzIHRlbGwgY2xvc3VyZSBjb21waWxlciBub3QgdG8gcmVuYW1lIHRoZXNlIHByb3BlcnRpZXNcclxuICAgICAgICBBcnJvd1snVGFibGUnXSA9IFRhYmxlO1xyXG4gICAgICAgIEFycm93WydyZWFkQnVmZmVycyddID0gcmVhZEJ1ZmZlcnM7XHJcbiAgICAgICAgQXJyb3dbJ1ZlY3RvciddID0gVmVjdG9yO1xyXG4gICAgICAgIEFycm93WydCaXRWZWN0b3InXSA9IEJpdFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snTGlzdFZlY3RvciddID0gTGlzdFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snVXRmOFZlY3RvciddID0gVXRmOFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snRGF0ZVZlY3RvciddID0gRGF0ZVZlY3RvcjtcclxuICAgICAgICBBcnJvd1snSW5kZXhWZWN0b3InXSA9IEluZGV4VmVjdG9yO1xyXG4gICAgICAgIEFycm93WydUeXBlZFZlY3RvciddID0gVHlwZWRWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ0ludDhWZWN0b3InXSA9IEludDhWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ0ludDE2VmVjdG9yJ10gPSBJbnQxNlZlY3RvcjtcclxuICAgICAgICBBcnJvd1snSW50MzJWZWN0b3InXSA9IEludDMyVmVjdG9yO1xyXG4gICAgICAgIEFycm93WydJbnQ2NFZlY3RvciddID0gSW50NjRWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ1VpbnQ4VmVjdG9yJ10gPSBVaW50OFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snVWludDE2VmVjdG9yJ10gPSBVaW50MTZWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ1VpbnQzMlZlY3RvciddID0gVWludDMyVmVjdG9yO1xyXG4gICAgICAgIEFycm93WydVaW50NjRWZWN0b3InXSA9IFVpbnQ2NFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snRmxvYXQzMlZlY3RvciddID0gRmxvYXQzMlZlY3RvcjtcclxuICAgICAgICBBcnJvd1snRmxvYXQ2NFZlY3RvciddID0gRmxvYXQ2NFZlY3RvcjtcclxuICAgICAgICBBcnJvd1snU3RydWN0VmVjdG9yJ10gPSBTdHJ1Y3RWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ0RpY3Rpb25hcnlWZWN0b3InXSA9IERpY3Rpb25hcnlWZWN0b3I7XHJcbiAgICAgICAgQXJyb3dbJ0ZpeGVkU2l6ZUxpc3RWZWN0b3InXSA9IEZpeGVkU2l6ZUxpc3RWZWN0b3I7XHJcbiAgICB9XHJcbn0gY2F0Y2ggKGUpIHsgLyogbm90IHRoZSBVTUQgYnVuZGxlICovIH1cclxuLyogZW5kIGNsb3N1cmUgZXhwb3J0cyAqL1xyXG4iXX0=\n"]}